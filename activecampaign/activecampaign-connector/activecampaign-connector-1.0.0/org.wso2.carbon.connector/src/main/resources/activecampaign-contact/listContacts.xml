<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.

   WSO2 Inc. licenses this file to you under the Apache License,
   Version 2.0 (the "License"); you may not use this file except
   in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied. See the License for the
   specific language governing permissions and limitations
   under the License.
-->
<!-- Method Documentation URL: http://www.activecampaign.com/api/example.php?call=contact_list -->
<template name="listContacts" xmlns="http://ws.apache.org/ns/synapse">
   <parameter name="contactIds" description="The ID's (comma-separated) of each contact you want to view." />
   <parameter name="emailFilter" description="To perform a exact match for Email address." />
   <parameter name="listIdFilter" description="To perform a exact match for List ID's associated with contact. Can provide multiple values (performs an OR operation) like this: '4,7' " />
   <parameter name="firstNameFilter" description="To perform a exact match for First Name." />
   <parameter name="lastNameFilter" description="To perform a exact match for Last Name." />
   <parameter name="idGreaterFilter" description="To include contacts with an ID greater than the given Contact ID." />
   <parameter name="idLessFilter" description="To include contacts with an ID less than the given Contact ID." />
   <parameter name="segmentIdFilter" description="To include contacts that match the given list segment." />
   <parameter name="statusFilter" description="To include contacts that match the given status.Provide multiple values (performs an OR operation) like this: '0,1' (0: unconfirmed, 1: active, 2: unsubscribed)" />
   <parameter name="dateTimeFilter" description="To include contacts ON (or AT) a specific date/time (set status param): pattern match - provide any portion of MySQL-formatted date/time string" />
   <parameter name="sinceDateTimeFilter" description="To include contacts *since* a specified date in the past (set status param): exact match - provide MySQL-formatted date/time string" />
   <parameter name="untilDateTimeFilter" description="To include contacts *until* a specified date (set status param): exact match - provide MySQL-formatted date/time string" />
   <parameter name="fieldsFilter" description="To filter on custom field values." />
   <parameter name="isFull" description="Whether or not to return ALL data. Set 1 for ALL data, and 0 for abbreviated." />
   <parameter name="sort" description="The field to sort on." />
   <parameter name="sortDirection" description="The direction of sort. Possible values ASC or DESC." />
   <parameter name="page" description="The page number. Results are limited to 10 per page." />
   <sequence>
      <property name="uri.var.contactIds" expression="$func:contactIds" />
      <property name="uri.var.emailFilter" expression="$func:emailFilter" />
      <property name="uri.var.listIdFilter" expression="$func:listIdFilter" />
      <property name="uri.var.firstNameFilter" expression="$func:firstNameFilter" />
      <property name="uri.var.lastNameFilter" expression="$func:lastNameFilter" />
      <property name="uri.var.idGreaterFilter" expression="$func:idGreaterFilter" />
      <property name="uri.var.idLessFilter" expression="$func:idLessFilter" />
      <property name="uri.var.segmentIdFilter" expression="$func:segmentIdFilter" />
      <property name="uri.var.statusFilter" expression="$func:statusFilter" />
      <property name="uri.var.dateTimeFilter" expression="$func:dateTimeFilter" />
      <property name="uri.var.sinceDateTimeFilter" expression="$func:sinceDateTimeFilter" />
      <property name="uri.var.untilDateTimeFilter" expression="$func:untilDateTimeFilter" />
      <property name="uri.var.fieldsFilter" expression="$func:fieldsFilter" />
      <property name="uri.var.isFull" expression="$func:isFull" />
      <property name="uri.var.sort" expression="$func:sort" />
      <property name="uri.var.sortDirection" expression="$func:sortDirection" />
      <property name="uri.var.page" expression="$func:page" />
      <script language="js">
         <![CDATA[           
            var contactIds = mc.getProperty('uri.var.contactIds');
            var emailFilter = mc.getProperty('uri.var.emailFilter');
            var listIdFilter = mc.getProperty('uri.var.listIdFilter');
            var firstNameFilter = mc.getProperty('uri.var.firstNameFilter');
            var lastNameFilter = mc.getProperty('uri.var.lastNameFilter');
            var idGreaterFilter = mc.getProperty('uri.var.idGreaterFilter');
            var idLessFilter = mc.getProperty('uri.var.idLessFilter');
            var segmentIdFilter = mc.getProperty('uri.var.segmentIdFilter');
            var statusFilter = mc.getProperty('uri.var.statusFilter');
            var dateTimeFilter = mc.getProperty('uri.var.dateTimeFilter');
            var sinceDateTimeFilter = mc.getProperty('uri.var.sinceDateTimeFilter');
            var untilDateTimeFilter = mc.getProperty('uri.var.untilDateTimeFilter');
            var fieldsFilter = mc.getProperty('uri.var.fieldsFilter');
            var isFull = mc.getProperty('uri.var.isFull');
            var sort = mc.getProperty('uri.var.sort');
            var sortDirection = mc.getProperty('uri.var.sortDirection');
            var page = mc.getProperty('uri.var.page');
            var urlQuery = "";            
            if (contactIds != null && contactIds != "") {
               urlQuery += "ids=" + contactIds + '&';
            }
            if (emailFilter != null && emailFilter != "") {
               urlQuery += "filters[email]=" + emailFilter + '&';
            }
            if (listIdFilter != null && listIdFilter != "") {
               urlQuery += "filters[listid]=" + listIdFilter + '&';
            }
            if (firstNameFilter != null && firstNameFilter != "") {
               urlQuery += "filters[first_name]=" + firstNameFilter + '&';
            }
            if (lastNameFilter != null && lastNameFilter != "") {
               urlQuery += "filters[last_name]=" + lastNameFilter + '&';
            }
            if (idGreaterFilter != null && idGreaterFilter != "") {
               urlQuery += "filters[id_greater]=" + idGreaterFilter + '&';
            }
            if (idLessFilter != null && idLessFilter != "") {
               urlQuery += "filters[id_less]=" + idLessFilter + '&';
            }
            if (segmentIdFilter != null && segmentIdFilter != "") {
               urlQuery += "filters[segmentid]=" + segmentIdFilter + '&';
            }
            if (statusFilter != null && statusFilter != "") {
               urlQuery += "filters[status]=" + statusFilter + '&';
            }
            if (dateTimeFilter != null && dateTimeFilter != "") {
               urlQuery += "filters[datetime]=" + dateTimeFilter + '&';
            }
            if (sinceDateTimeFilter != null && sinceDateTimeFilter != "") {
               urlQuery += "filters[since_datetime]=" + sinceDateTimeFilter + '&';
            }
            if (untilDateTimeFilter != null && untilDateTimeFilter != "") {
               urlQuery += "filters[until_datetime]=" + untilDateTimeFilter + '&';
            }
            if (fieldsFilter != null && fieldsFilter != "") {
               urlQuery += "filters[fields]" + fieldsFilter + '&';
            }           
            if (isFull != null && isFull != "") {
               urlQuery += "full=" + isFull + '&';
            }
            if (sort != null && sort != "") {
               urlQuery += "sort=" + sort + '&';
            }
            if (sortDirection != null && sortDirection != "") {
               urlQuery += "sort_direction=" + sortDirection + '&';
            }
            if (page != null && page != "") {
               urlQuery += "page=" + page + '&';
            }
            if (urlQuery != "") {
               urlQuery = '&' + urlQuery.substring(0, urlQuery.length - 1);
               mc.setProperty('uri.var.urlQuery', urlQuery);
            } 
         ]]>
      </script>
      <call>
         <endpoint>
            <http method="get" uri-template="{uri.var.apiUrl}contact_list{+uri.var.queryParams}{+uri.var.urlQuery}" />
         </endpoint>
      </call>
      <!-- Remove response custom header information -->
      <header name="X-Powered-By" scope="transport" action="remove" />
      <header name="Pragma" scope="transport" action="remove" />
      <header name="Cache-control" scope="transport" action="remove" />
   </sequence>
</template>