<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.

   WSO2 Inc. licenses this file to you under the Apache License,
   Version 2.0 (the "License"); you may not use this file except
   in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied. See the License for the
   specific language governing permissions and limitations
   under the License.
-->
<template name="listTasks" xmlns="http://ws.apache.org/ns/synapse">
   <!-- API Documentation URL - https://www.zoho.com/books/api/v3/projects/tasks/#list-tasks -->
   <parameter name="projectId" description="Project Id to retrive tasks." />
   <parameter name="sortColumn" description="Sort tasks.Allowed Values: task_name, billed_hours, log_time and un_billed_hours" />
   <parameter name="page" description="No. of page to be returned - Pagination value." />
   <parameter name="perPage" description="Specifies how many entried should be returned in the response." />
   <sequence>
      <property name="uri.var.projectId" expression="$func:projectId" />
      <property name="uri.var.sortColumn" expression="$func:sortColumn" />
      <property name="uri.var.page" expression="$func:page" />
      <property name="uri.var.perPage" expression="$func:perPage" />
      <script language="js">
         <![CDATA[
            var authToken = mc.getProperty('uri.var.authToken');
            var organizationId = mc.getProperty('uri.var.organizationId');
            var page = mc.getProperty('uri.var.page');
            var perPage = mc.getProperty('uri.var.perPage');
            var sortColumn = mc.getProperty('uri.var.sortColumn');
            var urlQuery = '?authtoken=' + authToken + '&organization_id=' + organizationId + '&';
            if (sortColumn != null && sortColumn != ""){
               urlQuery += 'sort_column=' + sortColumn + '&';
            }
            if (page != null && page != ""){
               urlQuery += 'page=' + page + '&';
            }
            if (perPage != null && perPage != ""){
               urlQuery += 'per_page=' + perPage + '&';
            }
            // Remove the trailing '&'
            urlQuery = urlQuery.substring(0, urlQuery.length - 1);
            mc.setProperty('uri.var.urlQuery', encodeURI(urlQuery));
         ]]>
      </script>
      <call>
         <endpoint>
            <http method="get" uri-template="legacy-encoding:{uri.var.apiUrl}/projects/{uri.var.projectId}/tasks{uri.var.urlQuery}" />
         </endpoint>
      </call>
      <!--Removing custom headers from the Response. -->
      <header name="X-Rate-Limit-Limit" action="remove" scope="transport" />
      <header name="X-XSS-Protection" action="remove" scope="transport" />
      <header name="X-Rate-Limit-Remaining" action="remove" scope="transport" />
      <header name="Cache-Control" action="remove" scope="transport" />
      <header name="Pragma" action="remove" scope="transport" />
      <header name="X-Content-Type-Options" action="remove" scope="transport" />
      <header name="BUILD_VERSION" action="remove" scope="transport" />
      <header name="Strict-Transport-Security" action="remove" scope="transport" />
      <header name="Vary" action="remove" scope="transport" />
      <header name="Content-Disposition" action="remove" scope="transport" />
      <header name="X-Rate-Limit-Reset" action="remove" scope="transport" />
      <header name="Status" action="remove" scope="transport" />
   </sequence>
</template>