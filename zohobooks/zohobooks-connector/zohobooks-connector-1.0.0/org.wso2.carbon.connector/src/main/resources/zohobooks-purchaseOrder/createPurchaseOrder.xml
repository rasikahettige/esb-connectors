<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.

   WSO2 Inc. licenses this file to you under the Apache License,
   Version 2.0 (the "License"); you may not use this file except
   in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied. See the License for the
   specific language governing permissions and limitations
   under the License.
-->
<template name="createPurchaseOrder" xmlns="http://ws.apache.org/ns/synapse">
   <!-- API Documentation URL - https://www.zoho.com/books/api/v3/invoices/#create-an-invoice -->
   <parameter name="vendorId" description="ID of the vendor the purchase order has to be created." />
   <parameter name="contactPersons" description="Array of contact person(s) for whom invoice has to be sent." />
   <parameter name="purchaseOrderNumber" description="Mandatory if auto number generation is disabled." />
   <parameter name="referenceNumber" description="Reference No. of the purchaseOrder." />
   <parameter name="templateId" description="ID of the pdf template associated with the purchase order." />
   <parameter name="date" description="The date the purchase order is created." />
   <parameter name="dueDate" description="Delivery date of purchase order." />
   <parameter name="exchangeRate" description="Exchange rate of the currency." />
   <parameter name="vatTreatment" description="VAT treatment for the purchase order." />
   <parameter name="acquisitionVatId" description="ID of the tax applied in case this is an EU." />
   <parameter name="reverseChargeVatId" description="ID of the tax applied in case this is a non UK." />
   <parameter name="customFields" description="Custom fields for an invoice." />
   <parameter name="lineItems" description="Line items of an invoice." />
   <parameter name="note" description="Delivery note for vendor." />
   <parameter name="noteDefault" description="Default delivery note for vendor." />
   <parameter name="term" description="Term for the vendor." />
   <parameter name="termDefault" description="Default term for vendor." />
   <parameter name="shipVia" description="Shipment Preference" />
   <parameter name="deliveryAddress" description="Delivery address of purchase order." />
   <parameter name="attachment"
      description="Allowed Extensions: gif, png, jpeg, jpg, bmp, pdf, xls, xlsx, doc and docx." />
   <parameter name="ignoreAutoNumberGeneration"
      description="Ignore auto invoice number generation for this invoice. This mandates the invoice number. Allowed Values: true and false." />
   <sequence>
      <property name="uri.var.vendorId" expression="$func:vendorId" />
      <property name="uri.var.contactPersons" expression="$func:contactPersons" />
      <property name="uri.var.purchaseOrderNumber" expression="$func:purchaseOrderNumber" />
      <property name="uri.var.referenceNumber" expression="$func:referenceNumber" />
      <property name="uri.var.templateId" expression="$func:templateId" />
      <property name="uri.var.date" expression="$func:date" />
      <property name="uri.var.dueDate" expression="$func:dueDate" />
      <property name="uri.var.exchangeRate" expression="$func:exchangeRate" />
      <property name="uri.var.vatTreatment" expression="$func:vatTreatment" />
      <property name="uri.var.acquisitionVatId" expression="$func:acquisitionVatId" />
      <property name="uri.var.reverseChargeVatId" expression="$func:reverseChargeVatId" />
      <property name="uri.var.customFields" expression="$func:customFields" />
      <property name="uri.var.lineItems" expression="$func:lineItems" />
      <property name="uri.var.note" expression="$func:note" />
      <property name="uri.var.noteDefault" expression="$func:noteDefault" />
      <property name="uri.var.term" expression="$func:term" />
      <property name="uri.var.termDefault" expression="$func:termDefault" />
      <property name="uri.var.shipVia" expression="$func:shipVia" />
      <property name="uri.var.deliveryAddress" expression="$func:deliveryAddress" />
      <property name="uri.var.attachment" expression="$func:attachment" />
      <property name="uri.var.ignoreAutoNumberGeneration" expression="$func:ignoreAutoNumberGeneration" />
      <payloadFactory media-type="json">
         <format>
            {"vendor_id": "$1"}
         </format>
         <args>
            <arg expression="get-property('uri.var.vendorId')" />
         </args>
      </payloadFactory>
      <script language="js">
         <![CDATA[
            var jsonPayload = mc.getPayloadJSON();
            
            var contactPersons = mc.getProperty('uri.var.contactPersons');
            var purchaseorderNumber = mc.getProperty('uri.var.purchaseOrderNumber');
            var referenceNumber = mc.getProperty('uri.var.referenceNumber');
            var templateId = mc.getProperty('uri.var.templateId');
            var date = mc.getProperty('uri.var.date');
            var dueDate = mc.getProperty('uri.var.dueDate');
            var exchangeRate = mc.getProperty('uri.var.exchangeRate');
            var vatTreatment = mc.getProperty('uri.var.vatTreatment');
            var acquisitionVatId = mc.getProperty('uri.var.acquisitionVatId');
            var reverseChargeVatId = mc.getProperty('uri.var.reverseChargeVatId');
            var customFields = mc.getProperty('uri.var.customFields');
            var lineItems = mc.getProperty('uri.var.lineItems');
            var note = mc.getProperty('uri.var.note');
            var noteDefault = mc.getProperty('uri.var.noteDefault');
            var term = mc.getProperty('uri.var.term');
            var termDefault = mc.getProperty('uri.var.termDefault');
            var shipVia = mc.getProperty('uri.var.shipVia');
            var deliveryAddress = mc.getProperty('uri.var.deliveryAddress');
            var attachment = mc.getProperty('"uri.var.attachment"');
            var ignoreAutoNumberGeneration = mc.getProperty('uri.var.ignoreAutoNumberGeneration');
            var authToken = mc.getProperty('uri.var.authToken');
            var organizationId = mc.getProperty('uri.var.organizationId');
     
            var urlQuery = '?authtoken=' + authToken + '&organization_id=' + organizationId + '&';
            
            if (ignoreAutoNumberGeneration != null && ignoreAutoNumberGeneration != ""){
               urlQuery += 'ignore_auto_number_generation=' + ignoreAutoNumberGeneration + '&';
            }
            
            if (attachment != null && send != ""){
               urlQuery += 'send=' + send + '&';
            }
            
            // Remove the trailing '&'
            urlQuery = urlQuery.substring(0, urlQuery.length - 1);
            mc.setProperty('uri.var.urlQuery', urlQuery);
               
            if (contactPersons != null && contactPersons != ""){
               jsonPayload["contact_persons"] = eval("(" + contactPersons + ")");
            }
            if (purchaseorderNumber != null && purchaseorderNumber != ""){
               jsonPayload["purchaseorder_number"] = purchaseorderNumber;
            }
            if (referenceNumber != null && referenceNumber != ""){
               jsonPayload["reference_number"] = referenceNumber;
            }          
            if (templateId != null && templateId != ""){
               jsonPayload["template_id"] = templateId;
            }
			if (date != null && date != ""){
               jsonPayload["date"] = date;
            }
			if (dueDate != null && dueDate != ""){
               jsonPayload["due_date"] = dueDate;
            }
			if (exchangeRate != null && exchangeRate != ""){
               jsonPayload["exchange_rate"] = exchangeRate;
            }
            if (customFields != null && customFields != ""){
               jsonPayload["custom_fields"] = eval("(" + customFields + ")");
            }
            if (vatTreatment != null && vatTreatment != ""){
               jsonPayload["vat_treatment"] = vatTreatment;
            }
            if (acquisitionVatId != null && acquisitionVatId != ""){
               jsonPayload["acquisition_vat_id"] = acquisitionVatId;
            }
            if (reverseChargeVatId != null && reverseChargeVatId != ""){
               jsonPayload["reverse_charge_vat_id"] = reverseChargeVatId;
            }
            if (note != null && note != ""){
               jsonPayload["notes"] = note;
            }
            if (noteDefault != null && noteDefault != ""){
               jsonPayload["notes_default"] = noteDefault;
            }
            if (lineItems != null && lineItems != ""){
               jsonPayload["line_items"] = eval("(" + lineItems + ")");
            }
			if (term != null && term != ""){
               jsonPayload["terms"] = term;
            }
            if (termDefault != null && termDefault != ""){
               jsonPayload["terms_default"] = termDefault;
            }
            if (shipVia != null && shipVia != ""){
               jsonPayload["ship_via"] = shipVia;
            }
            if (deliveryAddress != null && deliveryAddress != ""){
               jsonPayload["delivery_address"] = eval("(" + deliveryAddress + ")");
            }
            mc.setPayloadJSON(jsonPayload);
         ]]>
      </script>
      <!--Extract the JSON object to a Property. -->
      <property name="uri.var.jsonString" expression="json-eval($)" />
      <!--This script mediator is used for the purpose of URL encoding the JSON Object that was built in the Script Mediator
         above. -->
      <script language="js">
         <![CDATA[
			var jsonString = mc.getProperty('uri.var.jsonString');
			var urlQuery = mc.getProperty('uri.var.urlQuery');
			
			urlQuery += '&JSONString=' + encodeURIComponent(jsonString);
			mc.setProperty('uri.var.urlQuery', urlQuery);
         ]]>
      </script>
      <call>
         <endpoint>
            <http method="post" uri-template="legacy-encoding:{uri.var.apiUrl}/purchaseorders{uri.var.urlQuery}" />
         </endpoint>
      </call>
      <!--Removing custom headers from the Response. -->
      <header name="X-Rate-Limit-Limit" action="remove" scope="transport" />
      <header name="X-XSS-Protection" action="remove" scope="transport" />
      <header name="X-Rate-Limit-Remaining" action="remove" scope="transport" />
      <header name="Cache-Control" action="remove" scope="transport" />
      <header name="Pragma" action="remove" scope="transport" />
      <header name="X-Content-Type-Options" action="remove" scope="transport" />
      <header name="BUILD_VERSION" action="remove" scope="transport" />
      <header name="Strict-Transport-Security" action="remove" scope="transport" />
      <header name="Vary" action="remove" scope="transport" />
      <header name="Content-Disposition" action="remove" scope="transport" />
      <header name="X-Rate-Limit-Reset" action="remove" scope="transport" />
      <header name="Status" action="remove" scope="transport" />
   </sequence>
</template>