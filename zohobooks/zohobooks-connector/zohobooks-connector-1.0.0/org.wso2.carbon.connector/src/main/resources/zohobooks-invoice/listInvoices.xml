<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.

   WSO2 Inc. licenses this file to you under the Apache License,
   Version 2.0 (the "License"); you may not use this file except
   in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied. See the License for the
   specific language governing permissions and limitations
   under the License.
-->
<template name="listInvoices" xmlns="http://ws.apache.org/ns/synapse">
   <!-- API Documentation URL - https://www.zoho.com/books/api/v3/invoices/#list-invoices -->
   <parameter name="invoiceNumber" description="Search invoices by invoice number." />
   <parameter name="invoiceNumberStartsWith" description="Search invoices by invoice number." />
   <parameter name="invoiceNumberContains" description="Search invoices by invoice number." />
   <parameter name="itemName" description="Search invoices by item name." />
   <parameter name="itemNameStartsWith" description="Search invoices by item name." />
   <parameter name="itemNameContains" description="Search invoices by item name." />
   <parameter name="itemId" description="Search invoices by item id." />
   <parameter name="itemDescription" description="Search invoices by item description." />
   <parameter name="itemDescriptionStartsWith" description="Search invoices by item description." />
   <parameter name="itemDescriptionContains" description="Search invoices by item description." />
   <parameter name="referenceNumber" description="Search invoices by invoice reference number " />
   <parameter name="referenceNumberStartsWith" description="Search invoices by invoice reference number " />
   <parameter name="referenceNumberContains" description="Search invoices by invoice reference number." />
   <parameter name="customerName" description="Search invoices by customer name." />
   <parameter name="customerNameStartsWith" description="Search invoices by customer name." />
   <parameter name="customerNameContains" description="Search invoices by customer name." />
   <parameter name="email" description="Search invoices by customer contact persons email." />
   <parameter name="total" description="Search invoices by invoice total." />
   <parameter name="totalLessThan" description="Search invoices by invoice total." />
   <parameter name="totalLessEquals" description="Search invoices by invoice total." />
   <parameter name="totalGreaterThan" description="Search invoices by invoice total." />
   <parameter name="totalGreaterEquals" description="Search invoices by invoice total." />
   <parameter name="balanceLessThan" description="Search invoices by invoice balance." />
   <parameter name="balanceLessEquals" description="Search invoices by invoice balance." />
   <parameter name="balanceGreaterThan" description="Search invoices by invoice balance." />
   <parameter name="balanceGreaterEquals" description="Search invoices by invoice balance." />
   <parameter name="date" description="Search invoices by invoice date." />
   <parameter name="dateStart" description="Search invoices by invoice date." />
   <parameter name="dateEnd" description="Search invoices by invoice date." />
   <parameter name="dateBefore" description="Search invoices by invoice date." />
   <parameter name="dateAfter" description="Search invoices by invoice date." />
   <parameter name="dueDate" description="Search invoices by due date." />
   <parameter name="dueDateStart" description="Search invoices by due date." />
   <parameter name="dueDateEnd" description="Search invoices by due date." />
   <parameter name="dueDateBefore" description="Search invoices by due date." />
   <parameter name="dueDateAfter" description="Search invoices by due date." />
   <parameter name="status" description="Search invoices by invoice status." />
   <parameter name="customerId" description="Search invoices by customer id." />
   <parameter name="customField" description="Search invoices by custom fields." />
   <parameter name="customFieldStartsWith" description="Search invoices by custom fields." />
   <parameter name="customFieldContains" description="Search invoices by custom fields." />
   <parameter name="searchText" description="Search invoices by invoice number or purchase order or customer name." />
   <parameter name="sortColumn"
      description="Sort invoices. Allowed Values: customer_name, invoice_number, date, due_date, total, balance and created_time" />
   <parameter name="filterBy"
      description="Filter invoices by any status or payment expected date. Allowed Values: Status.All, Status.Sent, Status.Draft, Status.OverDue, Status.Paid, Status.Void, Status.Unpaid, Status.PartiallyPaid, Status.Viewed and Date.PaymentExpectedDate." />
   <parameter name="recurringInvoiceId" description="Search invoices by recurring profile id." />
   <parameter name="balance" description="Search invoices by invoice balance." />
   <parameter name="page" description="No. of page to be returned - Pagination value." />
   <parameter name="perPage" description="Specifies how mny entried should be returned in the response." />
   <parameter name="appliedFilter" description="Filters to be applied while querying." />
   <parameter name="sortOrder" description="Order of sorting - Ascending or Descending" />
   <sequence>
      <property name="uri.var.page" expression="$func:page" />
      <property name="uri.var.appliedFilter" expression="$func:appliedFilter" />
      <property name="uri.var.perPage" expression="$func:perPage" />
      <property name="uri.var.sortOrder" expression="$func:sortOrder" />
      <property name="uri.var.invoiceNumber" expression="$func:invoiceNumber" />
      <property name="uri.var.invoiceNumberStartsWith" expression="$func:invoiceNumberStartsWith" />
      <property name="uri.var.invoiceNumberContains" expression="$func:invoiceNumberContains" />
      <property name="uri.var.itemName" expression="$func:itemName" />
      <property name="uri.var.itemNameStartsWith" expression="$func:itemNameStartsWith" />
      <property name="uri.var.itemNameContains" expression="$func:itemNameContains" />
      <property name="uri.var.itemId" expression="$func:itemId" />
      <property name="uri.var.itemDescription" expression="$func:itemDescription" />
      <property name="uri.var.itemDescriptionStartsWith" expression="$func:itemDescriptionStartsWith" />
      <property name="uri.var.itemDescriptionContains" expression="$func:itemDescriptionContains" />
      <property name="uri.var.referenceNumber" expression="$func:referenceNumber" />
      <property name="uri.var.referenceNumberStartsWith" expression="$func:referenceNumberStartsWith" />
      <property name="uri.var.referenceNumberContains" expression="$func:referenceNumberContains" />
      <property name="uri.var.customerName" expression="$func:customerName" />
      <property name="uri.var.customerNameStartsWith" expression="$func:customerNameStartsWith" />
      <property name="uri.var.customerNameContains" expression="$func:customerNameContains" />
      <property name="uri.var.email" expression="$func:email" />
      <property name="uri.var.total" expression="$func:total" />
      <property name="uri.var.totalLessThan" expression="$func:totalLessThan" />
      <property name="uri.var.totalLessEquals" expression="$func:totalLessEquals" />
      <property name="uri.var.totalGreaterThan" expression="$func:totalGreaterThan" />
      <property name="uri.var.totalGreaterEquals" expression="$func:totalGreaterEquals" />
      <property name="uri.var.balanceLessThan" expression="$func:balanceLessThan" />
      <property name="uri.var.balanceLessEquals" expression="$func:balanceLessEquals" />
      <property name="uri.var.balanceGreaterThan" expression="$func:balanceGreaterThan" />
      <property name="uri.var.balanceGreaterEquals" expression="$func:balanceGreaterEquals" />
      <property name="uri.var.date" expression="$func:date" />
      <property name="uri.var.dateStart" expression="$func:dateStart" />
      <property name="uri.var.dateEnd" expression="$func:dateEnd" />
      <property name="uri.var.dateBefore" expression="$func:dateBefore" />
      <property name="uri.var.dateAfter" expression="$func:dateAfter" />
      <property name="uri.var.dueDate" expression="$func:dueDate" />
      <property name="uri.var.dueDateStart" expression="$func:dueDateStart" />
      <property name="uri.var.dueDateEnd" expression="$func:dueDateEnd" />
      <property name="uri.var.dueDateBefore" expression="$func:dueDateBefore" />
      <property name="uri.var.dueDateAfter" expression="$func:dueDateAfter" />
      <property name="uri.var.status" expression="$func:status" />
      <property name="uri.var.customerId" expression="$func:customerId" />
      <property name="uri.var.customField" expression="$func:customField" />
      <property name="uri.var.customFieldStartsWith" expression="$func:customFieldStartsWith" />
      <property name="uri.var.customFieldContains" expression="$func:customFieldContains" />
      <property name="uri.var.searchText" expression="$func:searchText" />
      <property name="uri.var.sortColumn" expression="$func:sortColumn" />
      <property name="uri.var.filterBy" expression="$func:filterBy" />
      <property name="uri.var.recurringInvoiceId" expression="$func:recurringInvoiceId" />
      <property name="uri.var.balance" expression="$func:balance" />

      <script language="js">
         <![CDATA[
            var page = mc.getProperty('uri.var.page');
            var appliedFilter = mc.getProperty('uri.var.appliedFilter');
            var perPage = mc.getProperty('uri.var.perPage');
            var sortOrder = mc.getProperty('uri.var.sortOrder');
            var balance = mc.getProperty('uri.var.balance');
            var balanceGreaterEquals = mc.getProperty('uri.var.balanceGreaterEquals');
            var balanceGreaterThan = mc.getProperty('uri.var.balanceGreaterThan');
            var balanceLessEquals = mc.getProperty('uri.var.balanceLessEquals');
            var balanceLessThan = mc.getProperty('uri.var.balanceLessThan');
            var customField = mc.getProperty('uri.var.customField');
            var customFieldContains = mc.getProperty('uri.var.customFieldContains');
            var customFieldStartsWith = mc.getProperty('uri.var.customFieldStartsWith');
            var customerId = mc.getProperty('uri.var.customerId');
            var customerName = mc.getProperty('uri.var.customerName');
            var customerNameContains = mc.getProperty('uri.var.customerNameContains');
            var customerNameStartsWith = mc.getProperty('uri.var.customerNameStartsWith');
            var date = mc.getProperty('uri.var.date');
            var dateAfter = mc.getProperty('uri.var.dateAfter');
            var dateBefore = mc.getProperty('uri.var.dateBefore');
            var dateEnd = mc.getProperty('uri.var.dateEnd');
            var dateStart = mc.getProperty('uri.var.dateStart');
            var dueDate = mc.getProperty('uri.var.dueDate');
            var dueDateAfter = mc.getProperty('uri.var.dueDateAfter');
            var dueDateBefore = mc.getProperty('uri.var.dueDateBefore');
            var dueDateEnd = mc.getProperty('uri.var.dueDateEnd');
            var dueDateStart = mc.getProperty('uri.var.dueDateStart');
            var email = mc.getProperty('uri.var.email');
            var filterBy = mc.getProperty('uri.var.filterBy');
            var invoiceNumber = mc.getProperty('uri.var.invoiceNumber');
            var invoiceNumberContains = mc.getProperty('uri.var.invoiceNumberContains');
            var invoiceNumberStartsWith = mc.getProperty('uri.var.invoiceNumberStartsWith');
            var itemDescription = mc.getProperty('uri.var.itemDescription');
            var itemDescriptionContains = mc.getProperty('uri.var.itemDescriptionContains');
            var itemDescriptionStartsWith = mc.getProperty('uri.var.itemDescriptionStartsWith');
            var itemId = mc.getProperty('uri.var.itemId');
            var itemName = mc.getProperty('uri.var.itemName');
            var itemNameContains = mc.getProperty('uri.var.itemNameContains');
            var itemNameStartsWith = mc.getProperty('uri.var.itemNameStartsWith');
            var recurringInvoiceId = mc.getProperty('uri.var.recurringInvoiceId');
            var referenceNumber = mc.getProperty('uri.var.referenceNumber');
            var referenceNumberContains = mc.getProperty('uri.var.referenceNumberContains');
            var referenceNumberStartsWith = mc.getProperty('uri.var.referenceNumberStartsWith');
            var searchText = mc.getProperty('uri.var.searchText');
            var sortColumn = mc.getProperty('uri.var.sortColumn');
            var status = mc.getProperty('uri.var.status');
            var total = mc.getProperty('uri.var.total');
            var totalGreaterEquals = mc.getProperty('uri.var.totalGreaterEquals');
            var totalGreaterThan = mc.getProperty('uri.var.totalGreaterThan');
            var totalLessEquals = mc.getProperty('uri.var.totalLessEquals');
            var totalLessThan = mc.getProperty('uri.var.totalLessThan');
            var authToken = mc.getProperty('uri.var.authToken');
            var organizationId = mc.getProperty('uri.var.organizationId');
            
            var urlQuery = '?authtoken=' + authToken + '&organization_id=' + organizationId + '&';
            
            if (balance != null && balance != ""){		
               urlQuery += 'balance=' + balance + '&';
            }
            
            if (balanceGreaterEquals != null && balanceGreaterEquals != ""){
               urlQuery += 'balance_greater_equals=' + balanceGreaterEquals + '&';
            }
            
            if (balanceGreaterThan != null && balanceGreaterThan != ""){
               urlQuery += 'balance_greater_than=' + balanceGreaterThan + '&';
            }
            
            if (balanceLessEquals != null && balanceLessEquals != ""){
               urlQuery += 'balance_less_equals=' + balanceLessEquals + '&';
            }
            
            if (balanceLessThan != null && balanceLessThan != ""){
               urlQuery += 'balance_less_than=' + balanceLessThan + '&';
            }
            
            if (customField != null && customField != ""){
               urlQuery += 'custom_field=' + customField + '&';
            }
            
            if (customFieldContains != null && customFieldContains != ""){
               urlQuery += 'custom_field_contains=' + customFieldContains + '&';
            }
            
            if (customFieldStartsWith != null && customFieldStartsWith != ""){
               urlQuery += 'custom_field_startswith=' + customFieldStartsWith + '&';
            }
            
            if (customerId != null && customerId != ""){
               urlQuery += 'customer_id=' + customerId + '&';
            }
            
            if (customerName != null && customerName != ""){
               urlQuery += 'customer_name=' + customerName + '&';
            }
            
            if (customerNameContains != null && customerNameContains != ""){
               urlQuery += 'customer_name_contains=' + customerNameContains + '&';
            }
            
            if (customerNameStartsWith != null && customerNameStartsWith != ""){
               urlQuery += 'customer_name_startswith=' + customerNameStartsWith + '&';
            }
            
            if (date != null && date != ""){
               urlQuery += 'date=' + date + '&';
            }
            
            if (dateAfter != null && dateAfter != ""){
               urlQuery += 'date_after=' + dateAfter + '&';
            }
            
            if (dateBefore != null && dateBefore != ""){
               urlQuery += 'date_before=' + dateBefore + '&';
            }
            
            if (dateEnd != null && dateEnd != ""){
               urlQuery += 'date_end=' + dateEnd + '&';
            }
            
            if (dateStart != null && dateStart != ""){
               urlQuery += 'date_start=' + dateStart + '&';
            }
            
            if (dueDate != null && dueDate != ""){
               urlQuery += 'due_date=' + dueDate + '&';
            }
            
            if (dueDateAfter != null && dueDateAfter != ""){
               urlQuery += 'due_date_after=' + dueDateAfter + '&';
            }
            
            if (dueDateBefore != null && dueDateBefore != ""){
               urlQuery += 'due_date_before=' + dueDateBefore + '&';
            }
            
            if (dueDateEnd != null && dueDateEnd != ""){
               urlQuery += 'due_date_end=' + dueDateEnd + '&';
            }
            
            if (dueDateStart != null && dueDateStart != ""){
               urlQuery += 'due_date_start=' + dueDateStart + '&';
            }
            
            if (email != null && email != ""){
               urlQuery += 'email=' + email + '&';
            }
            
            if (filterBy != null && filterBy != ""){
               urlQuery += 'filter_by=' + filterBy + '&';
            }
            
            if (invoiceNumber != null && invoiceNumber != ""){
               urlQuery += 'invoice_number=' + invoiceNumber + '&';
            }
            
            if (invoiceNumberContains != null && invoiceNumberContains != ""){
               urlQuery += 'invoice_number_contains=' + invoiceNumberContains + '&';
            }
            
            if (invoiceNumberStartsWith != null && invoiceNumberStartsWith != ""){
               urlQuery += 'invoice_number_startswith=' + invoiceNumberStartsWith + '&';
            }
            
            if (itemDescription != null && itemDescription != ""){
               urlQuery += 'item_description=' + itemDescription + '&';
            }
            
            if (itemDescriptionContains != null && itemDescriptionContains != ""){
               urlQuery += 'item_description_contains=' + itemDescriptionContains + '&';
            }
            
            if (itemDescriptionStartsWith != null && itemDescriptionStartsWith != ""){
               urlQuery += 'item_description_startswith=' + itemDescriptionStartsWith + '&';
            }
            
            if (itemId != null && itemId != ""){
               urlQuery += 'item_id=' + itemId + '&';
            }
            
            if (itemName != null && itemName != ""){
               urlQuery += 'item_name=' + itemName + '&';
            }
            
            if (itemNameContains != null && itemNameContains != ""){
               urlQuery += 'item_name_contains=' + itemNameContains + '&';
            }
            
            if (itemNameStartsWith != null && itemNameStartsWith != ""){
               urlQuery += 'item_name_startswith=' + itemNameStartsWith + '&';
            }
            
            if (recurringInvoiceId != null && recurringInvoiceId != ""){
               urlQuery += 'recurring_invoice_id=' + recurringInvoiceId + '&';
            }
            
            if (referenceNumber != null && referenceNumber != ""){
               urlQuery += 'reference_number=' + referenceNumber + '&';
            }
            
            if (referenceNumberContains != null && referenceNumberContains != ""){
               urlQuery += 'reference_number_contains=' + referenceNumberContains + '&';
            }
            
            if (referenceNumberStartsWith != null && referenceNumberStartsWith != ""){
               urlQuery += 'reference_number_startswith=' + referenceNumberStartsWith + '&';
            }
            
            if (searchText != null && searchText != ""){
               urlQuery += 'search_text=' + searchText + '&';
            }
            
            if (sortColumn != null && sortColumn != ""){
               urlQuery += 'sort_column=' + sortColumn + '&';
            }
            
            if (status != null && status != ""){
               urlQuery += 'status=' + status + '&';
            }
            
            if (total != null && total != ""){
               urlQuery += 'total=' + total + '&';
            }
            
            if (totalGreaterEquals != null && totalGreaterEquals != ""){
               urlQuery += 'total_greater_equals=' + totalGreaterEquals + '&';
            }
            
            if (totalGreaterThan != null && totalGreaterThan != ""){
               urlQuery += 'total_greater_than=' + totalGreaterThan + '&';
            }
            
            if (totalLessEquals != null && totalLessEquals != ""){
               urlQuery += 'total_less_equals=' + totalLessEquals + '&';
            }
            
            if (totalLessThan != null && totalLessThan != ""){
               urlQuery += 'total_less_than=' + totalLessThan + '&';
            }
            
            if (page != null && page != ""){
               urlQuery += 'page=' + page + '&';
            }
            
            if (perPage != null && perPage != ""){
               urlQuery += 'per_page=' + perPage + '&';
            }
            
            if (appliedFilter != null && appliedFilter != ""){
               urlQuery += 'applied_filter=' + appliedFilter + '&';
            }
            
            if (sortOrder != null && sortOrder != ""){
               urlQuery += 'sort_order=' + sortOrder + '&';
            }
            print(urlQuery);
            // Remove the trailing '&'
            urlQuery = urlQuery.substring(0, urlQuery.length - 1);
            mc.setProperty('uri.var.urlQuery', encodeURI(urlQuery));
            
         ]]>
      </script>

      <call>
         <endpoint>
            <http method="get" uri-template="legacy-encoding:{uri.var.apiUrl}/invoices{uri.var.urlQuery}" />
         </endpoint>
      </call>

	  <!--Removing custom headers from the Response.-->
      <header name="X-Rate-Limit-Limit" action="remove" scope="transport" />
      <header name="X-XSS-Protection" action="remove" scope="transport" />
      <header name="X-Rate-Limit-Remaining" action="remove" scope="transport" />
      <header name="Cache-Control" action="remove" scope="transport" />
      <header name="Pragma" action="remove" scope="transport" />
      <header name="X-Content-Type-Options" action="remove" scope="transport" />
      <header name="BUILD_VERSION" action="remove" scope="transport" />
      <header name="Strict-Transport-Security" action="remove" scope="transport" />
      <header name="Vary" action="remove" scope="transport" />
      <header name="Content-Disposition" action="remove" scope="transport" />
      <header name="X-Rate-Limit-Reset" action="remove" scope="transport" />
      <header name="Status" action="remove" scope="transport" />

   </sequence>
</template>