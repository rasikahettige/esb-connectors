<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 
   WSO2 Inc. licenses this file to you under the Apache License,
   Version 2.0 (the "License"); you may not use this file except
   in compliance with the License.
   You may obtain a copy of the License at
 
     http://www.apache.org/licenses/LICENSE-2.0
 
  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.
-->
<template name="createProject" xmlns="http://ws.apache.org/ns/synapse">
   <!-- API Documentation URL - https://www.zoho.com/books/api/v3/projects/#create-a-project -->
   <parameter name="projectName" description="Name of the project." />
   <parameter name="customerId" description="ID of the customer." />
   <parameter name="description" description="Project description." />
   <parameter name="billingType" description="he way you bill your customer." />
   <parameter name="rate" description="Hourly rate for a task." />
   <parameter name="budgetType" description="The way you budget." />
   <parameter name="budgetHours" description="Budgeting a staff." />
   <parameter name="budgetAmount" description="Give value, if you are estimating total project cost." />
   <parameter name="users" description="List of users assigining for the project." />
   <parameter name="tasks" description="List of tasks allocated for the project." />
   <sequence>
      <property name="uri.var.projectName" expression="$func:projectName" />
      <property name="uri.var.customerId" expression="$func:customerId" />
      <property name="uri.var.description" expression="$func:description" />
      <property name="uri.var.billingType" expression="$func:billingType" />
      <property name="uri.var.rate" expression="$func:rate" />
      <property name="uri.var.budgetType" expression="$func:budgetType" />
      <property name="uri.var.budgetHours" expression="$func:budgetHours" />
      <property name="uri.var.budgetAmount" expression="$func:budgetAmount" />
      <property name="uri.var.users" expression="$func:users" />
      <property name="uri.var.tasks" expression="$func:tasks" />
      <payloadFactory media-type="json">
         <format>
            {
               "project_name": "$1",
               "customer_id":"$2",
               "billing_type":"$3"
            }
         </format>
         <args>
            <arg expression="get-property('uri.var.projectName')" />
            <arg expression="get-property('uri.var.customerId')" />
            <arg expression="get-property('uri.var.billingType')" />
         </args>
      </payloadFactory>
      <script language="js">
         <![CDATA[
            var jsonPayload = mc.getPayloadJSON();
            var description = mc.getProperty('uri.var.description');
            var rate = mc.getProperty('uri.var.rate');
            var budgetType = mc.getProperty('uri.var.budgetType');
            var budgetHours = mc.getProperty('uri.var.budgetHours');
            var budgetAmount = mc.getProperty('uri.var.budgetAmount');
            var users = mc.getProperty('uri.var.users');
            var tasks = mc.getProperty('uri.var.tasks');
            var authToken = mc.getProperty('uri.var.authToken');
            var organizationId = mc.getProperty('uri.var.organizationId');
            var urlQuery = '?authtoken=' + authToken + '&organization_id=' + organizationId;
            mc.setProperty('uri.var.urlQuery', urlQuery);
            if (description != null && description != ""){
               jsonPayload["description"] = description;
            }
            if (rate != null && rate != ""){
               jsonPayload["rate"] = rate;
            }
			if (budgetType != null && budgetType != ""){
               jsonPayload["budget_type"] = budgetType;
            }
            if (budgetHours != null && budgetHours != ""){
               jsonPayload["budget_hours"] = budgetHours;
            }
            if (budgetAmount != null && budgetAmount != ""){
               jsonPayload["budget_amount"] = budgetAmount;
            }
			if (users != null && users != ""){
               jsonPayload["users"] = eval("(" + users + ")");
            }
            if (tasks != null && tasks != ""){
               jsonPayload["tasks"] = eval("(" + tasks + ")");
            }
            mc.setPayloadJSON(jsonPayload);
         ]]>
      </script>
      <!--Extract the JSON object to a Property. -->
      <property name="uri.var.jsonString" expression="json-eval($)" />
      <!--This script mediator is used for the purpose of URL encoding the JSON Object that was built in the Script Mediator
         above. -->
      <script language="js">
         <![CDATA[
			var jsonString = mc.getProperty('uri.var.jsonString');
			var urlQuery = mc.getProperty('uri.var.urlQuery');
			urlQuery += '&JSONString=' + encodeURIComponent(jsonString);
			mc.setProperty('uri.var.urlQuery', urlQuery);
         ]]>
      </script>
      <call>
         <endpoint>
            <http method="post" uri-template="legacy-encoding:{uri.var.apiUrl}/projects{uri.var.urlQuery}" />
         </endpoint>
      </call>
      <!--Removing custom headers from the Response. -->
      <header name="X-Rate-Limit-Limit" action="remove" scope="transport" />
      <header name="X-XSS-Protection" action="remove" scope="transport" />
      <header name="X-Rate-Limit-Remaining" action="remove" scope="transport" />
      <header name="Cache-Control" action="remove" scope="transport" />
      <header name="Pragma" action="remove" scope="transport" />
      <header name="X-Content-Type-Options" action="remove" scope="transport" />
      <header name="BUILD_VERSION" action="remove" scope="transport" />
      <header name="Strict-Transport-Security" action="remove" scope="transport" />
      <header name="Vary" action="remove" scope="transport" />
      <header name="Content-Disposition" action="remove" scope="transport" />
      <header name="X-Rate-Limit-Reset" action="remove" scope="transport" />
      <header name="Status" action="remove" scope="transport" />
   </sequence>
</template>