<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.

   WSO2 Inc. licenses this file to you under the Apache License,
   Version 2.0 (the "License"); you may not use this file except
   in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied. See the License for the
   specific language governing permissions and limitations
   under the License.
-->
<!-- API Doc: https://api.cashboardapp.com/invoices -->
<template name="createInvoice" xmlns="http://ws.apache.org/ns/synapse">
   <parameter name="clientId" description="The unique identifier of the invoice." />
   <parameter name="clientType" description="Whether the tpe of the client is a 'Company' or a 'Person.'" />
   <parameter name="address" description="Address of the client." />
   <parameter name="assignedId" description="The display 'number' of an invoice." />
   <parameter name="createdOn" description="Creation date of this invoice." />
   <parameter name="discountPercentage" description="The percentage of the discount." />
   <parameter name="documentTemplateId" description="ID of the document_template used to display this invoice." />
   <parameter name="dueDate" description="Date this invoice is due for payment." />
   <parameter name="earlyPeriodInDays" description="Defines the number of days before due_date that discount_percentage is applied" />
   <parameter name="hasBeenSent" description="Will be set to true if it has been emailed via the system." />
   <parameter name="includeExpenses" description="Controls the visibility of associated expenses when rendering to HTML or PDF." />
   <parameter name="includePdf" description="Determines if a PDF file should be included when sending reminder notifications." />
   <parameter name="includeTimeEntries" description="Controls the visibility of associated time entries when rendering to HTML or PDF." />
   <parameter name="invoiceDate" description="The date this invoice was issued to the client." />
   <parameter name="latePercentage" description="Similar to discount_percentage, but applies a late payment fee instead." />
   <parameter name="latePeriodInDays" description="Defines the number of days after due_date that late_percentage is applied, if you wish to use late payment fees." />
   <parameter name="notes" description="Custom notes field that is shown on the invoice to your clients." />
   <parameter name="poNumber" description="The purchase order number." />
   <parameter name="postReminderInDays" description="Every X days after due_date the invoice is unpaid an email notification will be sent to your client." />
   <parameter name="preReminderInDays" description="Every X days before due_date the invoice is unpaid an email notification will be sent to your client." />
   <parameter name="salesTax" description="Floating point value. Specified as a percentage." />
   <parameter name="salesTax2" description="Floating point value. Specified as a percentage." />
   <parameter name="salesTax2Cumulative" description="Boolean. Determines if sales_tax_2 is a compound tax, including sales_tax." />
   <sequence>
      <property name="uri.var.clientId" expression="$func:clientId" />
      <property name="uri.var.clientType" expression="$func:clientType" />
      <property name="uri.var.address" expression="$func:address" />
      <property name="uri.var.assignedId" expression="$func:assignedId" />
      <property name="uri.var.createdOn" expression="$func:createdOn" />
      <property name="uri.var.discountPercentage" expression="$func:discountPercentage" />
      <property name="uri.var.documentTemplateId" expression="$func:documentTemplateId" />
      <property name="uri.var.dueDate" expression="$func:dueDate" />
      <property name="uri.var.earlyPeriodInDays" expression="$func:earlyPeriodInDays" />
      <property name="uri.var.hasBeenSent" expression="$func:hasBeenSent" />
      <property name="uri.var.includeExpenses" expression="$func:includeExpenses" />
      <property name="uri.var.includePdf" expression="$func:includePdf" />
      <property name="uri.var.includeTimeEntries" expression="$func:includeTimeEntries" />
      <property name="uri.var.invoiceDate" expression="$func:invoiceDate" />
      <property name="uri.var.latePercentage" expression="$func:latePercentage" />
      <property name="uri.var.latePeriodInDays" expression="$func:latePeriodInDays" />
      <property name="uri.var.notes" expression="$func:notes" />
      <property name="uri.var.poNumber" expression="$func:poNumber" />
      <property name="uri.var.postReminderInDays" expression="$func:postReminderInDays" />
      <property name="uri.var.preReminderInDays" expression="$func:preReminderInDays" />
      <property name="uri.var.salesTax" expression="$func:salesTax" />
      <property name="uri.var.salesTax2" expression="$func:salesTax2" />
      <property name="uri.var.salesTax2Cumulative" expression="$func:salesTax2Cumulative" />
      <payloadFactory media-type="xml">
         <format>
            <invoice>
               <client_id>$1</client_id>
               <client_type>$2</client_type>
            </invoice>
         </format>
         <args>
            <arg expression="get-property('uri.var.clientId')" />
            <arg expression="get-property('uri.var.clientType')" />
         </args>
      </payloadFactory>
      <script language="js">
         <![CDATA[
            var address = mc.getProperty('uri.var.address');
            var assignedId = mc.getProperty('uri.var.assignedId');
            var createdOn = mc.getProperty('uri.var.createdOn');
            var discountPercentage = mc.getProperty('uri.var.discountPercentage');
            var documentTemplateId = mc.getProperty('uri.var.documentTemplateId');
            var dueDate = mc.getProperty('uri.var.dueDate');
            var earlyPeriodInDays = mc.getProperty('uri.var.earlyPeriodInDays');
            var hasBeenSent = mc.getProperty('uri.var.hasBeenSent');
            var includeExpenses = mc.getProperty('uri.var.includeExpenses');
            var includePdf = mc.getProperty('uri.var.includePdf');
            var includeTimeEntries = mc.getProperty('uri.var.includeTimeEntries');
            var invoiceDate = mc.getProperty('uri.var.invoiceDate');
            var latePercentage = mc.getProperty('uri.var.latePercentage');
            var latePeriodInDays = mc.getProperty('uri.var.latePeriodInDays');   
            var notes = mc.getProperty('uri.var.notes');   
            var poNumber = mc.getProperty('uri.var.poNumber');   
            var postReminderInDays = mc.getProperty('uri.var.postReminderInDays');   
            var preReminderInDays = mc.getProperty('uri.var.preReminderInDays');   
            var salesTax = mc.getProperty('uri.var.salesTax');   
            var salesTax2 = mc.getProperty('uri.var.salesTax2');      
            var salesTax2Cumulative = mc.getProperty('uri.var.salesTax2Cumulative');            
            //Get the existing payload
            var payload = mc.getPayloadXML();            
            if (address != null && address != "") {
               payload.address = address;
            }
            if (assignedId != null && assignedId != "") {
               payload.assigned_id = assignedId;
            }
            if (createdOn != null && createdOn != "") {
               payload.created_on = createdOn;
            }
            if (discountPercentage != null && discountPercentage != "") {
               payload.discount_percentage = discountPercentage;
            }
            if (documentTemplateId != null && documentTemplateId != "") {
               payload.document_template_id = documentTemplateId;
            }
            if (dueDate != null && dueDate != "") {
               payload.due_date = dueDate;
            }
            if (earlyPeriodInDays != null && earlyPeriodInDays != "") {
               payload.early_period_in_days = earlyPeriodInDays;
            }
            if (hasBeenSent != null && hasBeenSent != "") {
               payload.has_been_sent = hasBeenSent;
            }
            if (includeExpenses != null && includeExpenses != "") {
               payload.include_expenses = includeExpenses;
            }
            if (includePdf != null && includePdf != "") {
               payload.include_pdf = includePdf;
            }
            if (includeTimeEntries != null && includeTimeEntries != "") {
               payload.include_time_entries = includeTimeEntries;
            }
            if (invoiceDate != null && invoiceDate != "") {
               payload.invoice_date = invoiceDate;
            }
            if (latePercentage != null && latePercentage != "") {
               payload.late_percentage = latePercentage;
            }
            if (latePeriodInDays != null && latePeriodInDays != "") {
               payload.late_period_in_days = latePeriodInDays;
            }     
             if (notes != null && notes != "") {
               payload.notes = notes;
            } 
             if (poNumber != null && poNumber != "") {
               payload.po_number = poNumber;
            } 
             if (postReminderInDays != null && postReminderInDays != "") {
               payload.post_reminder_in_days = postReminderInDays;
            } 
             if (preReminderInDays != null && preReminderInDays != "") {
               payload.pre_reminder_in_days = preReminderInDays;
            } 
             if (salesTax != null && salesTax != "") {
               payload.sales_tax = salesTax;
            } 
             if (salesTax2 != null && salesTax2 != "") {
               payload.sales_tax_2 = salesTax2;
            } 
             if (salesTax2Cumulative != null && salesTax2Cumulative != "") {
               payload.sales_tax_2_cumulative = salesTax2Cumulative;
            }        
            //Set the newly constructed payload
            mc.setPayloadXML(payload);
         ]]>
      </script>
      <call>
         <endpoint>
            <http method="post" uri-template="{+uri.var.apiUrl}/invoices.{+uri.var.format}" />
         </endpoint>
      </call>
      <!-- Remove response custom header information -->
      <header name="X-Runtime" scope="transport" action="remove" />
      <header name="Status" scope="transport" action="remove" />
      <header name="X-Powered-By" scope="transport" action="remove" />
      <header name="Cache-Control" scope="transport" action="remove" />
      <header name="WWW-Authenticate" scope="transport" action="remove" />
      <header name="ETag" scope="transport" action="remove" />
   </sequence>
</template>