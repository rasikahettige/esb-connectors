<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.

   WSO2 Inc. licenses this file to you under the Apache License,
   Version 2.0 (the "License"); you may not use this file except
   in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied. See the License for the
   specific language governing permissions and limitations
   under the License.
-->
<!-- API Doc: https://api.cashboardapp.com/line_items -->
<template name="createLineItem" xmlns="http://ws.apache.org/ns/synapse">
   <parameter name="createdOn" description="The created time of the line item." />
   <parameter name="description" description="The description of the line item." />
   <parameter name="dueDate" description="The due date of the line item." />
   <parameter name="estimateId" description="The estimate Id which line item belongs to." />
   <parameter name="flatFee" description="The flat fee of the line item." />
   <parameter name="isComplete" description="The boolean value to check that the line item is complete or not." />
   <parameter name="isTaxable" description="The boolean value to check that the line item is taxable or not." />
   <parameter name="labelCode" description="The label code." />
   <parameter name="markupPercentage" description="The markup percentage for line item." />
   <parameter name="personId" description="The person Id which the line item assigned to." />
   <parameter name="pricePer" description="The price per item." />
   <parameter name="projectId" description="The project Id to which the line item is belongs to." />
   <parameter name="projectListId" description="The project list Id which the line item is belongs to." />
   <parameter name="projectListTitle" description="The project list title which the line item is belongs to." />
   <parameter name="quantityLow" description="The value for quantity low of the line items." />
   <parameter name="quantityHigh" description="The value for quantity high of hte line items." />
   <parameter name="rank" description="The rank of the line item." />
   <parameter name="title" description="The title of thge line item." />
   <parameter name="typeCode" description="The type code of the line item." />
   <parameter name="unitLabel" description="The unit label of the line item." />
   <sequence>
      <property name="uri.var.createdOn" expression="$func:createdOn" />
      <property name="uri.var.description" expression="$func:description" />
      <property name="uri.var.dueDate" expression="$func:dueDate" />
      <property name="uri.var.estimateId" expression="$func:estimateId" />
      <property name="uri.var.flatFee" expression="$func:flatFee" />
      <property name="uri.var.isComplete" expression="$func:isComplete" />
      <property name="uri.var.isTaxable" expression="$func:isTaxable" />
      <property name="uri.var.labelCode" expression="$func:labelCode" />
      <property name="uri.var.markupPercentage" expression="$func:markupPercentage" />
      <property name="uri.var.personId" expression="$func:personId" />
      <property name="uri.var.pricePer" expression="$func:pricePer" />
      <property name="uri.var.projectId" expression="$func:projectId" />
      <property name="uri.var.projectListId" expression="$func:projectListId" />
      <property name="uri.var.projectListTitle" expression="$func:projectListTitle" />
      <property name="uri.var.quantityLow" expression="$func:quantityLow" />
      <property name="uri.var.quantityHigh" expression="$func:quantityHigh" />
      <property name="uri.var.rank" expression="$func:rank" />
      <property name="uri.var.title" expression="$func:title" />
      <property name="uri.var.typeCode" expression="$func:typeCode" />
      <property name="uri.var.unitLabel" expression="$func:unitLabel" />
      <payloadFactory media-type="xml">
         <format>
            <line_item>
               <title>$1</title>
            </line_item>
         </format>
         <args>
            <arg expression="get-property('uri.var.title')" />
         </args>
      </payloadFactory>
      <script language="js">
         <![CDATA[
            var createdOn = mc.getProperty('uri.var.createdOn');
            var description = mc.getProperty('uri.var.description');
            var dueDate = mc.getProperty('uri.var.dueDate');
            var estimateId = mc.getProperty('uri.var.estimateId');
            var flatFee = mc.getProperty('uri.var.flatFee');
            var isComplete = mc.getProperty('uri.var.isComplete');
            var isTaxable = mc.getProperty('uri.var.isTaxable');
            var labelCode = mc.getProperty('uri.var.labelCode');
            var markupPercentage = mc.getProperty('uri.var.markupPercentage');
            var personId = mc.getProperty('uri.var.personId');
            var pricePer = mc.getProperty('uri.var.pricePer');
            var projectId = mc.getProperty('uri.var.projectId');
            var projectListId = mc.getProperty('uri.var.projectListId');
            var projectListTitle = mc.getProperty('uri.var.projectListTitle');
            var quantityLow = mc.getProperty('uri.var.quantityLow');
            var quantityHigh = mc.getProperty('uri.var.quantityHigh');
            var rank = mc.getProperty('uri.var.rank');
            var typeCode = mc.getProperty('uri.var.typeCode');
            var unitLabel = mc.getProperty('uri.var.unitLabel');
            //Get the existing payload
            var payload = mc.getPayloadXML();            
            if (createdOn != null && createdOn != "") {
               payload.created_on = createdOn;
            }
            if (description != null && description != "") {
               payload.description = description;
            }
            if (dueDate != null && dueDate != "") {
               payload.due_date = dueDate;
            }
            if (estimateId != null && estimateId != "") {
               payload.estimate_id = estimateId;
            }
            if (flatFee != null && flatFee != "") {
               payload.flat_fee = flatFee;
            }
            if (isComplete != null && isComplete != "") {
               payload.is_complete = isComplete;
            }
            if (isTaxable != null && isTaxable != "") {
               payload.is_taxable = isTaxable;
            }
            if (labelCode != null && labelCode != "") {
               payload.label_code = labelCode;
            }
            if (markupPercentage != null && markupPercentage != "") {
               payload.markup_percentage = markupPercentage;
            }
            if (personId != null && personId != "") {
               payload.person_id = personId;
            }
            if (pricePer != null && pricePer != "") {
               payload.price_per = pricePer;
            }
            if (projectId != null && projectId != "") {
               payload.project_id = projectId;
            }
            if (projectListId != null && projectListId != "") {
               payload.project_list_id = projectListId;
            }
            if (projectListTitle != null && projectListTitle != "") {
               payload.project_list_title = projectListTitle;
            }
            if (quantityLow != null && quantityLow != "") {
               payload.quantity_low = quantityLow;
            }
            if (quantityHigh != null && quantityHigh != "") {
               payload.quantity_high = quantityHigh;
            }
            if (rank != null && rank != "") {
               payload.rank = rank;
            }
            if (typeCode != null && typeCode != "") {
               payload.type_code = typeCode;
            }
            if (unitLabel != null && unitLabel != "") {
               payload.unit_label = unitLabel;
            }
            //Set the constructed payload
            mc.setPayloadXML(payload);
         ]]>
      </script>
      <call>
         <endpoint>
            <http method="post" uri-template="{+uri.var.apiUrl}/line_items.{+uri.var.format}" />
         </endpoint>
      </call>
      <!-- Remove response custom header information -->
      <header name="X-Runtime" scope="transport" action="remove" />
      <header name="Status" scope="transport" action="remove" />
      <header name="X-Powered-By" scope="transport" action="remove" />
      <header name="Cache-Control" scope="transport" action="remove" />
      <header name="WWW-Authenticate" scope="transport" action="remove" />
      <header name="ETag" scope="transport" action="remove" />
   </sequence>
</template>