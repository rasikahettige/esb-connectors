<template name="createInvoice" xmlns="http://ws.apache.org/ns/synapse">

	<parameter name="customField" description="Custom field or data extension." />
	<parameter name="docNumber" description="Reference number for the transaction." />
	<parameter name="txnDate" description="The date entered by the user when this transaction occurred." />
	<parameter name="departmentRef" description="Location of the transaction, as defined using location tracking in QuickBooks Online." />
	<parameter name="currencyRef" description="Reference to the Currency in which all amounts on the associated transaction are expressed" />
	<parameter name="exchangeRate" description="Currency exchange rate." />
	<parameter name="privateNote" description="User entered, organization-private note about the transaction." />
	<parameter name="linkedTxn" description="Zero or more linked transactions." />
	<parameter name="line" description="A line item of a transaction." />
	<parameter name="txnTaxDetail" description="Details of taxes charged on the transaction as a whole." />
	<parameter name="customerRef" description="Reference to a Customer or job." />
	<parameter name="customerMemo" description="User-entered message to the customer; this message is visible to end user on their transactions." />
	<parameter name="billAddr" description="Bill-to address of the Invoice." />
	<parameter name="shipAddr" description="Identifies the address where the goods must be shipped." />
	<parameter name="salesTermRef" description="Reference to the Term associated with the transaction." />
	<parameter name="dueDate" description="Date when the payment of the transaction is due." />
	<parameter name="globalTaxCalculation" description="Method in which tax is applied." />
	<parameter name="shipMethodRef" description="Reference to the ShipMethod associated with the transaction." />
	<parameter name="shipDate" description="Date for delivery of goods or services." />
	<parameter name="trackingNum" description="Shipping provider's tracking number for the delivery of the goods associated with the transaction." />
	<parameter name="totalAmt" description="Indicates the total amount of the transaction." />
	<parameter name="homeTotalAmt" description="Total amount of the transaction in the home currency. " />
	<parameter name="applyTaxAfterDiscount" description="Descibes the calculations of sales tax." />
	<parameter name="printStatus" description="Printing status of the invoice." />
	<parameter name="emailStatus" description="Email status of the invoice." />
	<parameter name="billEmail" description="Identifies the e-mail address where the invoice is sent." />
	<parameter name="balance" description="The balance reflecting any payments made against the transaction." />
	<parameter name="depositToAccountRef" description="Asset account where the payment money is deposited." />
	<parameter name="deposit" description="The deposit made towards this invoice." />
	<parameter name="allowIPNPayment" description="Allows to mark the invoice to be paid online using Intuit Payment Network." />

	<sequence>
		<property name="uri.var.customField" expression="$func:customField" />
		<property name="uri.var.docNumber" expression="$func:docNumber" />
		<property name="uri.var.txnDate" expression="$func:txnDate" />
		<property name="uri.var.departmentRef" expression="$func:departmentRef" />
		<property name="uri.var.currencyRef" expression="$func:currencyRef" />
		<property name="uri.var.exchangeRate" expression="$func:exchangeRate" />
		<property name="uri.var.privateNote" expression="$func:privateNote" />
		<property name="uri.var.linkedTxn" expression="$func:linkedTxn" />
		<property name="uri.var.line" expression="$func:line" />
		<property name="uri.var.txnTaxDetail" expression="$func:txnTaxDetail" />
		<property name="uri.var.customerRef" expression="$func:customerRef" />
		<property name="uri.var.customerMemo" expression="$func:customerMemo" />
		<property name="uri.var.billAddr" expression="$func:billAddr" />
		<property name="uri.var.shipAddr" expression="$func:shipAddr" />
		<property name="uri.var.salesTermRef" expression="$func:salesTermRef" />
		<property name="uri.var.dueDate" expression="$func:dueDate" />
		<property name="uri.var.globalTaxCalculation" expression="$func:globalTaxCalculation" />
		<property name="uri.var.shipMethodRef" expression="$func:shipMethodRef" />
		<property name="uri.var.shipDate" expression="$func:shipDate" />
		<property name="uri.var.trackingNum" expression="$func:trackingNum" />
		<property name="uri.var.totalAmt" expression="$func:totalAmt" />
		<property name="uri.var.homeTotalAmt" expression="$func:homeTotalAmt" />
		<property name="uri.var.applyTaxAfterDiscount" expression="$func:applyTaxAfterDiscount" />
		<property name="uri.var.printStatus" expression="$func:printStatus" />
		<property name="uri.var.emailStatus" expression="$func:emailStatus" />
		<property name="uri.var.billEmail" expression="$func:billEmail" />
		<property name="uri.var.balance" expression="$func:balance" />
		<property name="uri.var.depositToAccountRef" expression="$func:depositToAccountRef" />
		<property name="uri.var.deposit" expression="$func:deposit" />
		<property name="uri.var.allowIPNPayment" expression="$func:allowIPNPayment" />
		<property name="uri.var.uriRemainder" expression="fn:concat('/company/',get-property('uri.var.companyId'),'/invoice')" />
		<property name="uri.var.params" value="" />
		<property name="uri.var.method" value="POST" />

		<!-- Authentication Header Setup and call the API -->
		<class
			name="org.wso2.carbon.connector.quickbooks.auth.QuickBooksOAuthSignpost" />

		<filter source="boolean(get-property('auth'))" regex="true">
			<then>
				<property name="Authorization" expression="get-property('auth')"
					scope="transport" type="STRING" />
			</then>
		</filter>

		<!-- Building payload for mandatory params -->
		<payloadFactory media-type="json">
			<format>
				{
				"Line": $1,
				"CustomerRef": $2
				}
			</format>
			<args>
				<arg expression="get-property('uri.var.line')" />
				<arg expression="get-property('uri.var.customerRef')" />
			</args>
		</payloadFactory>

		<!-- Building payload for optional params -->
		<script language="js">
		    <![CDATA[
		    payload = mc.getPayloadJSON();
		    var customField = mc.getProperty("uri.var.customField");
		    var dueDate = mc.getProperty("uri.var.dueDate");
		    var docNumber = mc.getProperty("uri.var.docNumber");
		    var txnDate = mc.getProperty("uri.var.txnDate");
		    var departmentRef = mc.getProperty("uri.var.departmentRef");
		    var currencyRef = mc.getProperty("uri.var.currencyRef");
		    var exchangeRate = mc.getProperty("uri.var.exchangeRate");
		    var privateNote = mc.getProperty("uri.var.privateNote");
		    var linkedTxn = mc.getProperty("uri.var.linkedTxn");
		    var txnTaxDetail = mc.getProperty("uri.var.txnTaxDetail");
		    var customerMemo = mc.getProperty("uri.var.customerMemo");
		    var billAddr = mc.getProperty("uri.var.billAddr");
		    var shipAddr = mc.getProperty("uri.var.shipAddr");
		    var salesTermRef = mc.getProperty("uri.var.salesTermRef");
		    var globalTaxCalculation = mc.getProperty("uri.var.globalTaxCalculation");
		    var shipMethodRef = mc.getProperty("uri.var.shipMethodRef");
		    var shipDate = mc.getProperty("uri.var.shipDate");
		    var trackingNum = mc.getProperty("uri.var.trackingNum");
		    var totalAmt = mc.getProperty("uri.var.totalAmt");
		    var homeTotalAmt = mc.getProperty("uri.var.homeTotalAmt");
		    var applyTaxAfterDiscount = mc.getProperty("uri.var.applyTaxAfterDiscount");
		    var printStatus = mc.getProperty("uri.var.printStatus");
		    var emailStatus = mc.getProperty("uri.var.emailStatus");
		    var billEmail = mc.getProperty("uri.var.billEmail");
		    var balance = mc.getProperty("uri.var.balance");
		    var depositToAccountRef = mc.getProperty("uri.var.depositToAccountRef");
		    var deposit = mc.getProperty("uri.var.deposit");
		    var allowIPNPayment = mc.getProperty("uri.var.allowIPNPayment");
		    
		    if(customField != null && customField != ''){
		    	payload.CustomField = eval("("+ customField +")");
		    }
		    
		    if(docNumber != null && docNumber != ''){
		    	payload.DocNumber = docNumber;
		    }
		    
		    if(txnDate != null && txnDate != ''){
		    	payload.TxnDate = txnDate;
		    }
		    
		    if(departmentRef != null && departmentRef != ''){
		    	payload.DepartmentRef = eval("("+ departmentRef +")");
		    }
		    
		    if(currencyRef != null && currencyRef != ''){
		    	payload.CurrencyRef = eval("("+ currencyRef +")");
		    }
		    
		    if(exchangeRate != null && exchangeRate != ''){
		    	payload.ExchangeRate = exchangeRate;
		    }
		    
		    if(privateNote != null && privateNote != ''){
		    	payload.PrivateNote = privateNote;
		    }
		    
		    if(linkedTxn != null && linkedTxn != ''){
		    	payload.LinkedTxn = eval("("+ linkedTxn +")");
		    }
		    
		    if(txnTaxDetail != null && txnTaxDetail != ''){
		    	payload.TxnTaxDetail = eval("("+ txnTaxDetail +")");
		    }
		    
		    if(customerMemo != null && customerMemo != ''){
		    	payload.CustomerMemo = customerMemo;
		    }
		    
		    if(billAddr != null && billAddr != ''){
		    	payload.BillAddr = eval("("+ billAddr +")");
		    }
		    
		    if(shipAddr != null && shipAddr != ''){
		    	payload.ShipAddr = eval("("+ shipAddr +")");
		    }
		    
		    if(salesTermRef != null && salesTermRef != ''){
		    	payload.SalesTermRef = eval("("+ salesTermRef +")");		    	
		    }
		    
		    if(dueDate != null && dueDate != ''){
		    	payload.DueDate = dueDate;
		    }
		    
		    if(globalTaxCalculation != null && globalTaxCalculation != ''){
		    	payload.GlobalTaxCalculation = globalTaxCalculation;
		    }
		    
		    if(shipMethodRef != null && shipMethodRef != ''){
		    	payload.ShipMethodRef = eval("("+ shipMethodRef +")");;
		    }
		    
		    if(shipDate != null && shipDate != ''){
		    	payload.ShipDate = shipDate;
		    }
		    
		    if(trackingNum != null && trackingNum != ''){
		    	payload.TrackingNum = trackingNum;
		    }
		    
		    if(totalAmt != null && totalAmt != ''){
		    	payload.TotalAmt = totalAmt;
		    }
		    
		    if(homeTotalAmt != null && homeTotalAmt != ''){
		    	payload.HomeTotalAmt = homeTotalAmt;
		    }
		    
		    if(applyTaxAfterDiscount != null && applyTaxAfterDiscount != ''){
		    	payload.ApplyTaxAfterDiscount = applyTaxAfterDiscount;
		    }
		    
		    if(printStatus != null && printStatus != ''){
		    	payload.PrintStatus = printStatus;
		    }
		    
		    if(emailStatus != null && emailStatus != ''){
		    	payload.EmailStatus = emailStatus;
		    }
		    
		    if(billEmail != null && billEmail != ''){
		    	payload.BillEmail = billEmail;
		    }
		    
		    if(balance != null && balance != ''){
		    	payload.Balance = balance;
		    }
		    
		    if(depositToAccountRef != null && depositToAccountRef != ''){
		    	payload.DepositToAccountRef = eval("("+ depositToAccountRef +")");
		    }
		    
		    if(deposit != null && deposit != ''){
		    	payload.Deposit = deposit;		    	
		    }
		    
		    if(allowIPNPayment != null && allowIPNPayment != ''){
		    	payload.AllowIPNPayment = allowIPNPayment;
		    }
		    
		    mc.setPayloadJSON(payload);
		    
			]]>
		</script>
		
		<call>
			<endpoint>
				<http method="post" uri-template="legacy-encoding:{uri.var.apiUrl}{uri.var.uriRemainder}" />
			</endpoint>

		</call>
		
		<!-- Remove response custom header information -->
		<header name="intuit_tid" scope="transport" action="remove" />
		<header name="QBO-Version" scope="transport" action="remove" />
		<header name="Vary" scope="transport" action="remove" />
		<header name="Via" scope="transport" action="remove" />
	</sequence>
</template>