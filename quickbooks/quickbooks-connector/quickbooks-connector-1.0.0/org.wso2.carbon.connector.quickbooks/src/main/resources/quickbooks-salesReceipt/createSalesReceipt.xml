<template name="createSalesReceipt" xmlns="http://ws.apache.org/ns/synapse">

	<parameter name="customField" description="Custom field or data extension." />
	<parameter name="docNumber" description="Reference number for the transaction." />
	<parameter name="txnDate" description="The date entered by the user when this transaction occurred." />
	<parameter name="departmentRef" description="Location of the transaction, as defined using location tracking in QuickBooks Online." />
	<parameter name="privateNote" description="User entered, organization-private note about the transaction." />
	<parameter name="txnStatus" description="The status of the transaction." />
	<parameter name="linkedTxn" description="Zero or more linked transactions." />
	<parameter name="line" description="A line item of a transaction." />
	<parameter name="txnTaxDetail" description="Details of taxes charged on the transaction as a whole." />
	<parameter name="autoIncrementDocNumber" description="A boolean flag to auto increment the doc number." />
	<parameter name="customerRef" description="Reference to a Customer or job." />
	<parameter name="customerMemo" description="The user-entered message to the customer that appears in the printed invoice or the memo of 
  												the transaction to provide more detail, and does not appear in the printed message of the 
  												bill or the message appears in the printed record if it is an invoice or Bill or Credit Card respectively. " />
	<parameter name="billAddr" description="Bill-to address of the receipt." />
	<parameter name="shipAddr" description="Shipping address of the receipt." />
	<parameter name="classRef" description="Reference to the Class associated with the transaction." />
	<parameter name="shipMethodRef" description="Reference to the ShipMethod associated with the transaction." />
	<parameter name="shipDate" description="Date for delivery of goods or services." />
	<parameter name="trackingNum" description="Shipping provider's tracking number for the delivery of the goods associated with the transaction." />
	<parameter name="printStatus" description="Printing status of the invoice." />
	<parameter name="emailStatus" description="Email status of the invoice." />
	<parameter name="billEmail" description="Identifies the e-mail address where the SalesReceipt is sent." />
	<parameter name="paymentRefNum" description="Reference number for the payment." />
	<parameter name="paymentMethodRef" description="Reference to the PaymentMethod." />
	<parameter name="depositToAccountRef" description="Asset account where the payment money is deposited." />
	<parameter name="applyTaxAfterDiscount" description="If false or null, calculate the sales tax first, and then apply the discount. If true, subtract the discount first and then calculate the sales tax." />
	<parameter name="currencyRef" description="Reference to the Currency in which all amounts on the associated transaction are expressed." />
	<parameter name="exchangeRate" description="Currency exchange rate." />
	<parameter name="globalTaxCalculation" description="Method in which tax is applied." />

	<sequence>
		<property name="uri.var.customField" expression="$func:customField" />
		<property name="uri.var.docNumber" expression="$func:docNumber" />
		<property name="uri.var.txnDate" expression="$func:txnDate" />
		<property name="uri.var.departmentRef" expression="$func:departmentRef" />
		<property name="uri.var.privateNote" expression="$func:privateNote" />
		<property name="uri.var.txnStatus" expression="$func:txnStatus" />
		<property name="uri.var.linkedTxn" expression="$func:linkedTxn" />
		<property name="uri.var.line" expression="$func:line" />
		<property name="uri.var.txnTaxDetail" expression="$func:txnTaxDetail" />
		<property name="uri.var.autoIncrementDocNumber" expression="$func:autoIncrementDocNumber" />
		<property name="uri.var.customerRef" expression="$func:customerRef" />
		<property name="uri.var.customerMemo" expression="$func:customerMemo" />
		<property name="uri.var.billAddr" expression="$func:billAddr" />
		<property name="uri.var.shipAddr" expression="$func:shipAddr" />
		<property name="uri.var.classRef" expression="$func:classRef" />
		<property name="uri.var.shipMethodRef" expression="$func:shipMethodRef" />
		<property name="uri.var.shipDate" expression="$func:shipDate" />
		<property name="uri.var.trackingNum" expression="$func:trackingNum" />
		<property name="uri.var.printStatus" expression="$func:printStatus" />
		<property name="uri.var.emailStatus" expression="$func:emailStatus" />
		<property name="uri.var.billEmail" expression="$func:billEmail" />
		<property name="uri.var.paymentRefNum" expression="$func:paymentRefNum" />
		<property name="uri.var.paymentMethodRef" expression="$func:paymentMethodRef" />
		<property name="uri.var.depositToAccountRef" expression="$func:depositToAccountRef" />
		<property name="uri.var.applyTaxAfterDiscount" expression="$func:applyTaxAfterDiscount" />
		<property name="uri.var.currencyRef" expression="$func:currencyRef" />
		<property name="uri.var.exchangeRate" expression="$func:exchangeRate" />
		<property name="uri.var.globalTaxCalculation" expression="$func:globalTaxCalculation" />
		<property name="uri.var.uriRemainder" expression="fn:concat('/company/',get-property('uri.var.companyId'),'/salesreceipt')" />
		<property name="uri.var.params" value="" />
		<property name="uri.var.method" value="POST" />

		<!-- Authentication Header Setup and call the API -->
		<class
			name="org.wso2.carbon.connector.quickbooks.auth.QuickBooksOAuthSignpost" />

		<filter source="boolean(get-property('auth'))" regex="true">
			<then>
				<property name="Authorization" expression="get-property('auth')"
					scope="transport" type="STRING" />
			</then>
		</filter>

		<!-- Building payload for mandatory params -->
		<payloadFactory media-type="json">
			<format>
				{
				"Line": $1
				}
			</format>
			<args>
				<arg expression="get-property('uri.var.line')" />
			</args>
		</payloadFactory>

		<!-- Building payload for optional params -->
		<script language="js">
		    <![CDATA[
		    payload = mc.getPayloadJSON();
		    var customField = mc.getProperty("uri.var.customField");
		    var docNumber = mc.getProperty("uri.var.docNumber");
		    var txnDate = mc.getProperty("uri.var.txnDate");
		    var departmentRef = mc.getProperty("uri.var.departmentRef");
		    var privateNote = mc.getProperty("uri.var.privateNote");
		    var txnStatus = mc.getProperty("uri.var.txnStatus");
		    var linkedTxn = mc.getProperty("uri.var.linkedTxn");
		    var txnTaxDetail = mc.getProperty("uri.var.txnTaxDetail");
		    var autoIncrementDocNumber = mc.getProperty("uri.var.autoIncrementDocNumber");
		    var customerMemo = mc.getProperty("uri.var.customerMemo");
		    var billAddr = mc.getProperty("uri.var.billAddr");
		    var classRef = mc.getProperty("uri.var.classRef");
		    var shipAddr = mc.getProperty("uri.var.shipAddr");
		    var shipMethodRef = mc.getProperty("uri.var.shipMethodRef");
		    var shipDate = mc.getProperty("uri.var.shipDate");
		    var trackingNum = mc.getProperty("uri.var.trackingNum");
		    var printStatus = mc.getProperty("uri.var.printStatus");
		    var emailStatus = mc.getProperty("uri.var.emailStatus");
		    var billEmail = mc.getProperty("uri.var.billEmail");
		    var paymentRefNum = mc.getProperty("uri.var.paymentRefNum");
		    var paymentMethodRef = mc.getProperty("uri.var.paymentMethodRef");
		    var depositToAccountRef = mc.getProperty("uri.var.depositToAccountRef");
		    var applyTaxAfterDiscount = mc.getProperty("uri.var.applyTaxAfterDiscount");
		    var currencyRef = mc.getProperty("uri.var.currencyRef");
		    var exchangeRate = mc.getProperty("uri.var.exchangeRate");
		    var globalTaxCalculation = mc.getProperty("uri.var.globalTaxCalculation");
		    var customerRef = mc.getProperty("uri.var.customerRef");
		    
		    if(customField != null && customField != ''){
		    	payload.CustomField = eval("("+customField+")");
		    }
		    
		    if(docNumber != null && docNumber != ''){
		    	payload.DocNumber = docNumber;
		    }
		    
		    if(txnDate != null && txnDate != ''){
		    	payload.TxnDate = txnDate;
		    }
		    
		    if(departmentRef != null && departmentRef != ''){
		    	payload.DepartmentRef = eval("("+departmentRef+")");
		    }
		    
		    if(txnStatus != null && txnStatus != ''){
		    	payload.TxnStatus = txnStatus;
		    }
		    
		    if(privateNote != null && privateNote != ''){
		    	payload.PrivateNote =  privateNote;
		    }
		    
		    if(linkedTxn != null && linkedTxn != ''){
		    	payload.LinkedTxn = eval("("+linkedTxn+")");
		    }
		    
		    if(txnTaxDetail != null && txnTaxDetail != ''){
		    	payload.TxnTaxDetail = eval("(" + txnTaxDetail + ")");
		    }
		    
		    if(autoIncrementDocNumber != null && autoIncrementDocNumber != ''){
		    	payload.AutoDocNumber = autoIncrementDocNumber;
		    }
		    
		    if(customerMemo != null && customerMemo != ''){
		    	payload.CustomerMemo = eval("(" + customerMemo + ")");
		    }
		    
		    if(customerRef != null && customerRef != ''){
		    	payload.CustomerRef = eval("(" + customerRef + ")");
		    }
		    
		    if(billAddr != null && billAddr != ''){
		    	payload.BillAddr = eval("(" + billAddr + ")");
		    }
		    
		    if(classRef != null && classRef != ''){
		    	payload.ClassRef = eval("(" + classRef + ")");
		    }
		    
		    if(shipAddr != null && shipAddr != ''){
		    	payload.ShipAddr = eval("(" + shipAddr + ")");
		    }
		    
		    if(shipMethodRef != null && shipMethodRef != ''){
		    	payload.ShipMethodRef = eval("(" + shipMethodRef + ")");
		    	
		    }
		    
		    if(shipDate != null && shipDate != ''){
		    	payload.ShipDate = shipDate;
		    }
		    
		    if(trackingNum != null && trackingNum != ''){
		    	payload.TrackingNum = trackingNum;		    	
		    }
		    
		    if(printStatus != null && printStatus != ''){
		    	payload.PrintStatus = printStatus;
		    }
		    
		    if(emailStatus != null && emailStatus != ''){
		    	payload.EmailStatus = emailStatus;
		    }
		    
		    if(billEmail != null && billEmail != ''){
		    	payload.BillEmail = eval("(" + billEmail + ")");
		    }
		    
		    if(paymentRefNum != null && paymentRefNum != ''){
		    	payload.PaymentRefNum = paymentRefNum;
		    }
		    
		    if(paymentMethodRef != null && paymentMethodRef != ''){
		    	payload.PaymentMethodRef = eval("(" + paymentMethodRef + ")");
		    }
		    
		    if(depositToAccountRef != null && depositToAccountRef != ''){
		    	payload.DepositToAccountRef = eval("(" + depositToAccountRef + ")");
		    }
		    
		    if(applyTaxAfterDiscount != null && applyTaxAfterDiscount != ''){
		    	payload.ApplyTaxAfterDiscount = applyTaxAfterDiscount;
		    }
		    
		    if(currencyRef != null && currencyRef != ''){
		    	payload.CurrencyRef = eval("(" + currencyRef + ")");
		    }
		    
		    if(exchangeRate != null && exchangeRate != ''){
		    	payload.ExchangeRate = exchangeRate;
		    }
		    
		    if(globalTaxCalculation != null && globalTaxCalculation != ''){
		    	payload.GlobalTaxCalculation = globalTaxCalculation;
		    }
		    
		    mc.setPayloadJSON(payload);
		    
			]]>
		</script>

		<call>
			<endpoint>
				<http method="post" uri-template="legacy-encoding:{uri.var.apiUrl}{uri.var.uriRemainder}" />
			</endpoint>
		</call>

		<!-- Remove response custom header information -->
		<header name="intuit_tid" scope="transport" action="remove" />
		<header name="QBO-Version" scope="transport" action="remove" />
		<header name="Vary" scope="transport" action="remove" />
		<header name="Via" scope="transport" action="remove" />
	</sequence>
</template>