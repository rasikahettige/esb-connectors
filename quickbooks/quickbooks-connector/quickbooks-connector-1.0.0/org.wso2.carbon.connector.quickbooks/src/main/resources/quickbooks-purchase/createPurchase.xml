<template name="createPurchase" xmlns="http://ws.apache.org/ns/synapse">

	<parameter name="docNumber" description="Reference number for the transaction." />
	<parameter name="txnDate" description="The date entered by the user when this transaction occurred." />
	<parameter name="departmentRef" description="Location of the transaction, as defined using location tracking in QuickBooks Online." />
	<parameter name="currencyRef" description="Reference to the Currency in which all amounts on the associated transaction are expressed. " />
	<parameter name="exchangeRate" description="Currency exchange rate." />
	<parameter name="privateNote" description="User entered, organization-private note about the transaction." />
	<parameter name="line" description="A line item of a transaction." />
	<parameter name="txnTaxDetail" description="Details of taxes charged on the transaction as a whole." />
	<parameter name="accountRef" description="Specifies the account reference." />
	<parameter name="paymentType" description="Expense Type can be Cash, Check, or CreditCard." />
	<parameter name="entityRef" description="Specifies the party with whom an expense is associated." />
	<parameter name="credit" description="If False,it represents a charge.If True it represents a refund." />
	<parameter name="remitToAddr" description="Address to which the payment should be sent." />
	<parameter name="printStatus" description="PrintStatus is applicable only for Check." />
	<parameter name="globalTaxCalculation" description="Method in which tax is applied." />

	<sequence>
		<property name="uri.var.docNumber" expression="$func:docNumber" />
		<property name="uri.var.txnDate" expression="$func:txnDate" />
		<property name="uri.var.privateNote" expression="$func:privateNote" />
		<property name="uri.var.line" expression="$func:line" />
		<property name="uri.var.accountRef" expression="$func:accountRef" />
		<property name="uri.var.paymentType" expression="$func:paymentType" />
		<property name="uri.var.entityRef" expression="$func:entityRef" />
		<property name="uri.var.credit" expression="$func:credit" />
		<property name="uri.var.printStatus" expression="$func:printStatus" />
		<property name="uri.var.departmentRef" expression="$func:departmentRef" />
		<property name="uri.var.txnTaxDetail" expression="$func:txnTaxDetail" />
		<property name="uri.var.currencyRef" expression="$func:currencyRef" />
		<property name="uri.var.exchangeRate" expression="$func:exchangeRate" />
		<property name="uri.var.globalTaxCalculation" expression="$func:globalTaxCalculation" />
		<property name="uri.var.uriRemainder" expression="fn:concat('/company/',get-property('uri.var.companyId'),'/purchase')" />
		<property name="uri.var.params" value="" />
		<property name="uri.var.method" value="POST" />

		<!-- Authentication Header Setup and call the API -->
		<class
			name="org.wso2.carbon.connector.quickbooks.auth.QuickBooksOAuthSignpost" />

		<filter source="boolean(get-property('auth'))" regex="true">
			<then>
				<property name="Authorization" expression="get-property('auth')"
					scope="transport" type="STRING" />
			</then>
		</filter>

		<payloadFactory media-type="json">
			<format>
				{
				"AccountRef":$1,
				"PaymentType":"$2"
				}
			</format>

			<args>
				<arg expression="get-property('uri.var.accountRef')" />
				<arg expression="get-property('uri.var.paymentType')" />
			</args>
		</payloadFactory>

		<script language="js">
			<![CDATA[
				//request body param variables
				var payload = mc.getPayloadJSON();
				
				var docNumber = mc.getProperty('uri.var.docNumber');
				var txnDate = mc.getProperty('uri.var.txnDate');
				var privateNote = mc.getProperty('uri.var.privateNote');
				var line = mc.getProperty('uri.var.line');
				var entityRef = mc.getProperty('uri.var.entityRef');				
				var credit = mc.getProperty('uri.var.credit');					
				var printStatus = mc.getProperty('uri.var.printStatus');					
				var departmentRef = mc.getProperty('uri.var.departmentRef');
				var txnTaxDetail = mc.getProperty('uri.var.txnTaxDetail');				
				var currencyRef = mc.getProperty('uri.var.currencyRef');
				var exchangeRate = mc.getProperty('uri.var.exchangeRate');				
				var globalTaxCalculation = mc.getProperty('uri.var.globalTaxCalculation');
				
				if (docNumber != null && docNumber != "") {
					payload.DocNumber = docNumber;
				}
				
				if (txnDate != null && txnDate != "") {
					payload.TxnDate = txnDate;
				}
				
				if (departmentRef != null && departmentRef != "") {
					payload.DepartmentRef = eval("("+ departmentRef +")");
				}				
				
				if (currencyRef != null && currencyRef != "") {
					payload.CurrencyRef = eval("("+ currencyRef +")");
				}
				
				if (exchangeRate != null && exchangeRate != "") {
					payload.ExchangeRate = exchangeRate;
				}
				
				if (privateNote != null && privateNote != "") {
					payload.PrivateNote = privateNote;
				}
				
				if (line != null && line != "") {
					payload.Line = eval("("+ line +")");
				}
				
				if (txnTaxDetail != null && txnTaxDetail != "") {
					payload.TxnTaxDetail = eval("("+ txnTaxDetail +")");
				}								
				
				if (entityRef != null && entityRef != "") {
					payload.EntityRef = eval("("+ entityRef +")");
				}								
				
				if (credit != null && credit != "") {
					payload.Credit = credit;
				}
											
				if (printStatus != null && printStatus != "") {
					payload.PrintStatus = printStatus;
				}
				
				if (globalTaxCalculation != null && globalTaxCalculation != "") {
					payload.GlobalTaxCalculation = globalTaxCalculation;
				}
				
				mc.setPayloadJSON(payload);
			]]>
		</script>
			
		<call>
			<endpoint>
				<http method="post" uri-template="legacy-encoding:{uri.var.apiUrl}{uri.var.uriRemainder}" />
			</endpoint>
		</call>

		<!-- Remove response custom header information -->
		<header name="intuit_tid" scope="transport" action="remove" />
		<header name="QBO-Version" scope="transport" action="remove" />
		<header name="Vary" scope="transport" action="remove" />
		<header name="Via" scope="transport" action="remove" />

	</sequence>
</template>