<template name="createBill" xmlns="http://ws.apache.org/ns/synapse">

	<parameter name="id" description="Unique Identifier for an Intuit entity (object)" />
	<parameter name="customFields" description="The customFields" />
	<parameter name="attachableRef" description="Specifies entity name of the attachment from where the attachment was requested." />
	<parameter name="docNumber" description="Reference number for the transaction." />
	<parameter name="txnDate" description="The date entered by the user when this transaction occurred." />
	<parameter name="departmentRef" description="Location of the transaction." />
	<parameter name="currencyRef" description="Reference to the Currency in which all amounts on the associated transaction are expressed." />
	<parameter name="exchangeRate" description="Currency exchange rate." />
	<parameter name="privateNote" description="User entered, organization-private note about the transaction." />
	<parameter name="line" description="One or more line items comprising the transaction." />
	<parameter name="txnTaxDetail" description="Provides information for taxes charged on the transaction as a whole." />
	<parameter name="vendorRef" description="Specifies the vendor reference for this transaction." />
	<parameter name="aPAccountRef" description="Specifies which AP account the bill will be credited to." />
	<parameter name="totalAmt" description="The total amount due, determined by taking the sum of all lines associated." />
	<parameter name="globalTaxCalculation" description="The total of tax." />
	<parameter name="salesTermRef" description="This is a reference to a Term object describing the payment terms of this bill." />
	<parameter name="dueDate" description="The nominal date by which the bill must be paid." />
	<parameter name="balance" description="The unpaid amount of the bill." />

	<sequence>
		<property name="uri.var.id" expression="$func:id" />
		<property name="uri.var.customFields" expression="$func:customFields" />
		<property name="uri.var.attachableRef" expression="$func:attachableRef" />
		<property name="uri.var.docNumber" expression="$func:docNumber" />
		<property name="uri.var.txnDate" expression="$func:txnDate" />
		<property name="uri.var.departmentRef" expression="$func:departmentRef" />
		<property name="uri.var.currencyRef" expression="$func:currencyRef" />
		<property name="uri.var.exchangeRate" expression="$func:exchangeRate" />
		<property name="uri.var.privateNote" expression="$func:privateNote" />
		<property name="uri.var.line" expression="$func:line" />
		<property name="uri.var.txnTaxDetail" expression="$func:txnTaxDetail" />
		<property name="uri.var.vendorRef" expression="$func:vendorRef" />
		<property name="uri.var.aPAccountRef" expression="$func:aPAccountRef" />
		<property name="uri.var.totalAmt" expression="$func:totalAmt" />
		<property name="uri.var.globalTaxCalculation" expression="$func:globalTaxCalculation" />
		<property name="uri.var.salesTermRef" expression="$func:salesTermRef" />
		<property name="uri.var.dueDate" expression="$func:dueDate" />
		<property name="uri.var.balance" expression="$func:balance" />

		<property name="uri.var.uriRemainder"
			expression="fn:concat('/company/',get-property('uri.var.companyId'),'/bill')" />
		<property name="uri.var.params" value="" />
		<property name="uri.var.method" value="POST" />

		<!-- Authentication Header Setup and call the API -->
		<class
			name="org.wso2.carbon.connector.quickbooks.auth.QuickBooksOAuthSignpost" />

		<filter source="boolean(get-property('auth'))" regex="true">
			<then>
				<property name="Authorization" expression="get-property('auth')"
					scope="transport" type="STRING" />
			</then>
		</filter>

		<!-- Building payload for mandatory params -->
		<payloadFactory media-type="json">
			<format>
				{
				"Line": $1,
				"VendorRef": $2
				}
			</format>
			<args>
				<arg expression="get-property('uri.var.line')" />
				<arg expression="get-property('uri.var.vendorRef')" />
			</args>
		</payloadFactory>

		<!-- Building payload for optional params -->
		<script language="js">
		    <![CDATA[
		    payload = mc.getPayloadJSON();
		    var id = mc.getProperty("uri.var.id");
		    var customFields = mc.getProperty("uri.var.customFields");
		    var attachableRef = mc.getProperty("uri.var.attachableRef");
		    var docNumber = mc.getProperty("uri.var.docNumber");
		    var txnDate = mc.getProperty("uri.var.txnDate");
		    var departmentRef = mc.getProperty("uri.var.departmentRef");
		    var currencyRef = mc.getProperty("uri.var.currencyRef");
		    var exchangeRate = mc.getProperty("uri.var.exchangeRate");
		    var privateNote = mc.getProperty("uri.var.privateNote");
		    var aPAccountRef = mc.getProperty("uri.var.aPAccountRef");
		    var totalAmt = mc.getProperty("uri.var.totalAmt");
		    var globalTaxCalculation = mc.getProperty("uri.var.globalTaxCalculation");
		    var salesTermRef = mc.getProperty("uri.var.salesTermRef");
		    var dueDate = mc.getProperty("uri.var.dueDate");
		    var balance = mc.getProperty("uri.var.balance");
		    
		    if(id!= null && id != ''){
		    	payload.Id = id;
		    }
		    
		    if(customFields!= null && customFields != ''){
		    	payload.CustomField = eval("("+ customFields +")");
		    }
		    
		    if(attachableRef!= null && attachableRef != ''){
		    	payload.AttachableRef = eval("("+ attachableRef +")");
		    }
		    		  		    
		    if(docNumber!= null && docNumber != ''){
		    	payload.DocNumber = docNumber;
		    }
		    
		    if(txnDate!= null && txnDate != ''){
		    	payload.TxnDate = txnDate;
		    }
		    
		    if(departmentRef!= null && departmentRef != ''){
		    	payload.DepartmentRef = eval("("+ departmentRef +")");
		    }
		    
		    if(currencyRef!= null && currencyRef != ''){
		    	payload.CurrencyRef = eval("("+ currencyRef +")");
		    }
		    
		    if(exchangeRate!= null && exchangeRate != ''){
		    	payload.ExchangeRate = exchangeRate;
		    }
		    
		    if(privateNote!= null && privateNote != ''){
		    	payload.PrivateNote = privateNote;
		    }
		    
		    if(aPAccountRef!= null && aPAccountRef != ''){
		    	payload.APAccountRef = eval("("+ aPAccountRef +")");
		    }
		    
		    if(totalAmt!= null && totalAmt != ''){
		    	payload.TotalAmt = totalAmt;
		    }
		    
		    if(globalTaxCalculation!= null && globalTaxCalculation != ''){
		    	payload.GlobalTaxCalculation = globalTaxCalculation;
		    }
		    
		    if(salesTermRef!= null && salesTermRef != ''){
		    	payload.SalesTermRef = eval("("+ salesTermRef +")");
		    }
		    
		    if(dueDate!= null && dueDate != ''){
		    	payload.DueDate = dueDate;
		    }
		    
		    if(balance!= null && balance != ''){
		    	payload.Balance = balance;		    	
		    }
		    
		    mc.setPayloadJSON(payload);
		    
			]]>
		</script>
	
		<call>
			<endpoint>
				<http method="post" uri-template="legacy-encoding:{uri.var.apiUrl}{uri.var.uriRemainder}" />
			</endpoint>
		</call>

		<!-- Remove response custom header information -->
		<header name="intuit_tid" scope="transport" action="remove" />
		<header name="QBO-Version" scope="transport" action="remove" />
		<header name="Vary" scope="transport" action="remove" />
		<header name="Via" scope="transport" action="remove" />

	</sequence>
</template>