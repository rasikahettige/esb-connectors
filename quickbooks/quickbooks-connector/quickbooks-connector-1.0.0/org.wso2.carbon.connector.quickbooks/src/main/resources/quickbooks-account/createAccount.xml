<template name="createAccount" xmlns="http://ws.apache.org/ns/synapse">

    <!-- required parameters -->
	<parameter name="name" description="User recognizable name for the Account." />
	<parameter name="accountType" description="A detailed account classification that specifies the use of this account." />
		
	 <!-- optional parameters -->
	<parameter name="accountSubType" description="The account sub-type classification and is based on the AccountType value." />
	<parameter name="subAccount" description="Specifies the Account is a SubAccount or Not." />
	<parameter name="parentRef" description="Specifies the Parent AccountId if this represents a SubAccount." />
	<parameter name="description" description="User entered description for the account." />
	<parameter name="fullyQualifiedName" description="Fully qualified name of the entity." />
	<parameter name="active" description="Whether or not active inactive accounts may be hidden from most display purposes and may not be posted to." />
	<parameter name="classification" description="The classification of an account." />
	<parameter name="accountNumber" description="User entered/specified account number." />
	<parameter name="openingBalance" description="Specifies the openning balance amount for the current Account" />
	<parameter name="openingBalanceDate" description="Date of when the above openingBalance amount exists." />
	<parameter name="currencyRef" description="Reference to the Currency in which this account holds the amounts." />

	<sequence>

		<property name="uri.var.name" expression="$func:name" />
		<property name="uri.var.subAccount" expression="$func:subAccount" />
		<property name="uri.var.parentRef" expression="$func:parentRef" />
		<property name="uri.var.description" expression="$func:description" />
		<property name="uri.var.fullyQualifiedName" expression="$func:fullyQualifiedName" />
		<property name="uri.var.active" expression="$func:active" />
		<property name="uri.var.classification" expression="$func:classification" />
		<property name="uri.var.accountType" expression="$func:accountType" />
		<property name="uri.var.accountSubType" expression="$func:accountSubType" />
		<property name="uri.var.accountNumber" expression="$func:accountNumber" />
		<property name="uri.var.openingBalance" expression="$func:openingBalance" />
		<property name="uri.var.openingBalanceDate" expression="$func:openingBalanceDate" />
		<property name="uri.var.currencyRef" expression="$func:currencyRef" />
		<property name="uri.var.uriRemainder" expression="fn:concat('/company/',get-property('uri.var.companyId'),'/account')" />
		<property name="uri.var.params" value="" />
		<property name="uri.var.method" value="POST" />
		
		<!-- Authentication Header Setup and call the API -->
		<class
			name="org.wso2.carbon.connector.quickbooks.auth.QuickBooksOAuthSignpost" />

		<filter source="boolean(get-property('auth'))" regex="true">
			<then>
				<property name="Authorization" expression="get-property('auth')"
					scope="transport" type="STRING" />
			</then>
		</filter>

		<payloadFactory media-type="json">
			<format>

				{
					"Name":"$1",
					"AccountType":"$2"
				}

			</format>

			<args>
				<arg expression="get-property('uri.var.name')" />
				<arg expression="get-property('uri.var.accountType')" />
				
			</args>
		</payloadFactory>
		
		
		<script language="js">
			<![CDATA[
				//request body param variables
				var payload = mc.getPayloadJSON();
				
				var subAccount = mc.getProperty('uri.var.subAccount');
				var parentRef = mc.getProperty('uri.var.parentRef');
				var description = mc.getProperty('uri.var.description');
				var fullyQualifiedName = mc.getProperty('uri.var.fullyQualifiedName');
				var active = mc.getProperty('uri.var.active');
				var classification = mc.getProperty('uri.var.classification');
				var accountSubType = mc.getProperty('uri.var.accountSubType');				
				var accountNumber = mc.getProperty('uri.var.accountNumber');
				var openingBalance = mc.getProperty('uri.var.openingBalance');
				var openingBalanceDate = mc.getProperty('uri.var.openingBalanceDate');
				var currencyRef = mc.getProperty('uri.var.currencyRef');
				
				if (subAccount != null && subAccount != "") {
					payload.SubAccount = subAccount;
				}
				
				if (parentRef != null && parentRef != "") {
					payload.ParentRef = eval("("+ parentRef +")");
				}
				
				if (description != null && description != "") {
					payload.Description = description;
				}
				
				if (fullyQualifiedName != null && fullyQualifiedName != "") {
					payload.FullyQualifiedName = fullyQualifiedName;
				}
				
				if (active != null && active != "") {
					payload.Active = active;
				}
				
				if (classification != null && classification != "") {
					payload.Classification = classification;
				}
				
				if (accountSubType != null && accountSubType != "") {
					payload.AccountSubType = accountSubType;
				}				
								
				if (accountNumber != null && accountNumber != "") {
					payload.AcctNum = accountNumber;
				}
				
				if (openingBalance != null && openingBalance != "") {
					payload.OpeningBalance = openingBalance;
				}
				
				if (openingBalanceDate != null && openingBalanceDate != "") {
					payload.OpeningBalanceDate = openingBalanceDate;
				}
				
				if (currencyRef != null && currencyRef != "") {
					payload.CurrencyRef = eval("("+ currencyRef +")");
				}				
											
				mc.setPayloadJSON(payload);
			]]>

		</script>
		
		<call>
			<endpoint>
				<http method="post" uri-template="legacy-encoding:{uri.var.apiUrl}{uri.var.uriRemainder}" />
			</endpoint>
		</call>

		<!-- Remove response custom header information -->
		<header name="intuit_tid" scope="transport" action="remove" />
		<header name="QBO-Version" scope="transport" action="remove" />
		<header name="Vary" scope="transport" action="remove" />
		<header name="Via" scope="transport" action="remove" />

	</sequence>
</template>